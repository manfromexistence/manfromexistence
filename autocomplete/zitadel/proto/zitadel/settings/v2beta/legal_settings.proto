syntax = "proto3";

package zitadel.settings.v2beta;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/settings/v2beta;settings";

import "protoc-gen-openapiv2/options/annotations.proto";
import "zitadel/settings/v2beta/settings.proto";
import "validate/validate.proto";

message LegalAndSupportSettings {
  string tos_link = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"https://zitadel.com/docs/legal/terms-of-service\"";
    }
  ];
  string privacy_policy_link = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"https://zitadel.com/docs/legal/privacy-policy\"";
    }
  ];
  string help_link = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"https://zitadel.com/docs/manuals/introduction\"";
    }
  ];
  string support_email = 4 [
    (validate.rules).string = {ignore_empty: true, max_len: 320, email: true},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"support-email@test.com\"";
      description: "help / support email address."
    }
  ];
  // resource_owner_type returns if the setting is managed on the organization or on the instance
  ResourceOwnerType resource_owner_type = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "resource_owner_type returns if the setting is managed on the organization or on the instance";
    }
  ];
}
