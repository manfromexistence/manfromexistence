{
  "dependencies": [
    "@udecode/plate-mention"
  ],
  "doc": {
    "description": "A mention element with customizable prefix and label.",
    "docs": [
      {
        "route": "/docs/mention"
      },
      {
        "route": "https://pro.platejs.org/docs/components/mention-element"
      }
    ],
    "examples": [
      "mention-demo"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React from 'react';\n\nimport type { TMentionElement } from '@udecode/plate-mention';\n\nimport { cn, withRef } from '@udecode/cn';\nimport { IS_APPLE, getHandler } from '@udecode/plate-common';\nimport { useElement } from '@udecode/plate-common/react';\nimport { useFocused, useReadOnly, useSelected } from 'slate-react';\n\nimport { useMounted } from '@/hooks/use-mounted';\n\nimport { PlateElement } from './plate-element';\n\nexport const MentionElement = withRef<\n  typeof PlateElement,\n  {\n    prefix?: string;\n    onClick?: (mentionNode: any) => void;\n  }\n>(({ children, className, prefix, onClick, ...props }, ref) => {\n  const element = useElement<TMentionElement>();\n  const selected = useSelected();\n  const focused = useFocused();\n  const mounted = useMounted();\n  const readOnly = useReadOnly();\n\n  return (\n    <PlateElement\n      ref={ref}\n      className={cn(\n        className,\n        'inline-block rounded-md bg-muted px-1.5 py-0.5 align-baseline text-sm font-medium',\n        !readOnly && 'cursor-pointer',\n        selected && focused && 'ring-2 ring-ring',\n        element.children[0].bold === true && 'font-bold',\n        element.children[0].italic === true && 'italic',\n        element.children[0].underline === true && 'underline'\n      )}\n      onClick={getHandler(onClick, element)}\n      data-slate-value={element.value}\n      contentEditable={false}\n      draggable\n      {...props}\n    >\n      {mounted && IS_APPLE ? (\n        // Mac OS IME https://github.com/ianstormtaylor/slate/issues/3490\n        <React.Fragment>\n          {children}\n          {prefix}\n          {element.value}\n        </React.Fragment>\n      ) : (\n        // Others like Android https://github.com/ianstormtaylor/slate/pull/5360\n        <React.Fragment>\n          {prefix}\n          {element.value}\n          {children}\n        </React.Fragment>\n      )}\n    </PlateElement>\n  );\n});\n",
      "path": "plate-ui/mention-element.tsx",
      "target": "components/plate-ui/mention-element.tsx",
      "type": "registry:ui"
    },
    {
      "content": "import React from 'react';\n\nimport type { SlateElementProps } from '@udecode/plate-common';\nimport type { TMentionElement } from '@udecode/plate-mention';\n\nimport { cn } from '@udecode/cn';\nimport { IS_APPLE, SlateElement } from '@udecode/plate-common';\n\nexport function MentionElementStatic({\n  children,\n  className,\n  prefix,\n  ...props\n}: SlateElementProps & {\n  prefix?: string;\n}) {\n  const element = props.element as TMentionElement;\n\n  return (\n    <SlateElement\n      className={cn(\n        className,\n        'inline-block rounded-md bg-muted px-1.5 py-0.5 align-baseline text-sm font-medium',\n        element.children[0].bold === true && 'font-bold',\n        element.children[0].italic === true && 'italic',\n        element.children[0].underline === true && 'underline'\n      )}\n      data-slate-value={element.value}\n      {...props}\n    >\n      {IS_APPLE ? (\n        // Mac OS IME https://github.com/ianstormtaylor/slate/issues/3490\n        <React.Fragment>\n          {children}\n          {prefix}\n          {element.value}\n        </React.Fragment>\n      ) : (\n        // Others like Android https://github.com/ianstormtaylor/slate/pull/5360\n        <React.Fragment>\n          {prefix}\n          {element.value}\n          {children}\n        </React.Fragment>\n      )}\n    </SlateElement>\n  );\n}\n",
      "path": "plate-ui/mention-element-static.tsx",
      "target": "components/plate-ui/mention-element-static.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "mention-element",
  "registryDependencies": [
    "plate-element",
    "use-mounted"
  ],
  "type": "registry:ui"
}