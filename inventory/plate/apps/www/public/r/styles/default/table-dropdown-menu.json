{
  "dependencies": [
    "@udecode/plate-table",
    "@radix-ui/react-dropdown-menu"
  ],
  "doc": {
    "description": "A menu for table manipulation and formatting.",
    "docs": [
      {
        "route": "/docs/table"
      }
    ],
    "examples": [
      "table-demo"
    ]
  },
  "files": [
    {
      "content": "'use client';\n\nimport React, { useCallback, useState } from 'react';\n\nimport type { DropdownMenuProps } from '@radix-ui/react-dropdown-menu';\n\nimport { cn } from '@udecode/cn';\nimport { someNode } from '@udecode/plate-common';\nimport {\n  focusEditor,\n  useEditorPlugin,\n  useEditorSelector,\n} from '@udecode/plate-common/react';\nimport {\n  deleteColumn,\n  deleteRow,\n  deleteTable,\n  insertTable,\n  insertTableRow,\n} from '@udecode/plate-table';\nimport { TablePlugin } from '@udecode/plate-table/react';\nimport {\n  Minus,\n  Plus,\n  RectangleHorizontal,\n  RectangleVertical,\n  Table,\n  Trash,\n} from 'lucide-react';\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n  useOpenState,\n} from './dropdown-menu';\nimport { ToolbarButton } from './toolbar';\n\nconst COLS = 8;\n\nexport function TableDropdownMenu(props: DropdownMenuProps) {\n  const tableSelected = useEditorSelector(\n    (editor) => someNode(editor, { match: { type: TablePlugin.key } }),\n    []\n  );\n\n  const { editor, tf } = useEditorPlugin(TablePlugin);\n\n  const openState = useOpenState();\n\n  const [table, setTable] = useState(\n    Array.from({ length: COLS }, () => Array.from({ length: COLS }).fill(0))\n  );\n  const [size, setSize] = useState({ colCount: 0, rowCount: 0 });\n\n  const onCellMove = useCallback(\n    (rowIndex: number, colIndex: number) => {\n      const newTables = [...table];\n\n      for (let i = 0; i < newTables.length; i++) {\n        for (let j = 0; j < newTables[i].length; j++) {\n          newTables[i][j] =\n            i >= 0 && i <= rowIndex && j >= 0 && j <= colIndex ? 1 : 0;\n        }\n      }\n\n      setSize({ colCount: colIndex + 1, rowCount: rowIndex + 1 });\n      setTable(newTables);\n    },\n    [table]\n  );\n\n  const onInsertTable = useCallback(() => {\n    insertTable(editor, size);\n    focusEditor(editor);\n  }, [editor, size]);\n\n  return (\n    <DropdownMenu modal={false} {...openState} {...props}>\n      <DropdownMenuTrigger asChild>\n        <ToolbarButton pressed={openState.open} tooltip=\"Table\" isDropdown>\n          <Table />\n        </ToolbarButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent\n        className=\"flex w-[180px] min-w-0 flex-col\"\n        align=\"start\"\n      >\n        <DropdownMenuGroup>\n          <DropdownMenuSub>\n            <DropdownMenuSubTrigger>\n              <Table />\n              <span>Table</span>\n            </DropdownMenuSubTrigger>\n            <DropdownMenuSubContent className=\"m-0 p-0\">\n              <div className=\"m-0 !flex flex-col p-0\" onClick={onInsertTable}>\n                <div className=\"grid size-[130px] grid-cols-8 gap-0.5 p-1\">\n                  {table.map((rows, rowIndex) =>\n                    rows.map((value, columIndex) => {\n                      return (\n                        <div\n                          key={`(${rowIndex},${columIndex})`}\n                          className={cn(\n                            'col-span-1 size-3 border border-solid bg-secondary',\n                            !!value && 'border-current'\n                          )}\n                          onMouseMove={() => {\n                            onCellMove(rowIndex, columIndex);\n                          }}\n                        />\n                      );\n                    })\n                  )}\n                </div>\n\n                <div className=\"text-center text-xs text-current\">\n                  {size.rowCount} x {size.colCount}\n                </div>\n              </div>\n            </DropdownMenuSubContent>\n          </DropdownMenuSub>\n\n          <DropdownMenuSub>\n            <DropdownMenuSubTrigger disabled={!tableSelected}>\n              <RectangleVertical />\n              <span>Column</span>\n            </DropdownMenuSubTrigger>\n            <DropdownMenuSubContent>\n              <DropdownMenuItem\n                className=\"min-w-[180px]\"\n                disabled={!tableSelected}\n                onSelect={() => {\n                  tf.insert.tableColumn();\n                  focusEditor(editor);\n                }}\n              >\n                <Plus />\n                Insert column after\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                className=\"min-w-[180px]\"\n                disabled={!tableSelected}\n                onSelect={() => {\n                  deleteColumn(editor);\n                  focusEditor(editor);\n                }}\n              >\n                <Minus />\n                Delete column\n              </DropdownMenuItem>\n            </DropdownMenuSubContent>\n          </DropdownMenuSub>\n\n          <DropdownMenuSub>\n            <DropdownMenuSubTrigger disabled={!tableSelected}>\n              <RectangleHorizontal />\n              <span>Row</span>\n            </DropdownMenuSubTrigger>\n            <DropdownMenuSubContent>\n              <DropdownMenuItem\n                className=\"min-w-[180px]\"\n                disabled={!tableSelected}\n                onSelect={() => {\n                  insertTableRow(editor);\n                  focusEditor(editor);\n                }}\n              >\n                <Plus />\n                Insert row after\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                className=\"min-w-[180px]\"\n                disabled={!tableSelected}\n                onSelect={() => {\n                  deleteRow(editor);\n                  focusEditor(editor);\n                }}\n              >\n                <Minus />\n                Delete row\n              </DropdownMenuItem>\n            </DropdownMenuSubContent>\n            <DropdownMenuItem\n              className=\"min-w-[180px]\"\n              disabled={!tableSelected}\n              onSelect={() => {\n                deleteTable(editor);\n                focusEditor(editor);\n              }}\n            >\n              <Trash />\n              Delete table\n            </DropdownMenuItem>\n          </DropdownMenuSub>\n        </DropdownMenuGroup>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n",
      "path": "plate-ui/table-dropdown-menu.tsx",
      "target": "components/plate-ui/table-dropdown-menu.tsx",
      "type": "registry:ui"
    }
  ],
  "name": "table-dropdown-menu",
  "registryDependencies": [
    "dropdown-menu",
    "toolbar"
  ],
  "type": "registry:ui"
}