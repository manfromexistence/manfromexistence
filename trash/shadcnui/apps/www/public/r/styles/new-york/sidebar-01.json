{
  "name": "sidebar-01",
  "type": "registry:block",
  "description": "A collapsible sidebar with workspace switcher, main navigation, secondary navigation, project navigation, and user navigation.",
  "registryDependencies": [
    "avatar",
    "button",
    "collapsible",
    "dropdown-menu",
    "drawer",
    "separator",
    "input",
    "popover",
    "sheet",
    "progress",
    "card",
    "use-mobile"
  ],
  "files": [
    {
      "path": "block/sidebar-01/page.tsx",
      "content": "import { AppSidebar } from \"@/registry/new-york/block/sidebar-01/components/app-sidebar\"\nimport {\n  SidebarLayout,\n  SidebarTrigger,\n} from \"@/registry/new-york/block/sidebar-01/ui/sidebar\"\n\nexport default async function Page() {\n  const { cookies } = await import(\"next/headers\")\n  return (\n    <SidebarLayout\n      defaultOpen={cookies().get(\"sidebar:state\")?.value === \"true\"}\n    >\n      <AppSidebar />\n      <main className=\"flex flex-1 flex-col p-2 transition-all duration-300 ease-in-out\">\n        <div className=\"h-full rounded-md border-2 border-dashed p-2\">\n          <SidebarTrigger />\n        </div>\n      </main>\n    </SidebarLayout>\n  )\n}\n",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    },
    {
      "path": "block/sidebar-01/components/app-sidebar.tsx",
      "content": "\"use client\"\n\nimport {\n  Atom,\n  Bird,\n  BookOpen,\n  Bot,\n  Code2,\n  Eclipse,\n  Frame,\n  History,\n  LifeBuoy,\n  Map,\n  PieChart,\n  Rabbit,\n  Send,\n  Settings2,\n  SquareTerminal,\n  Star,\n  Turtle,\n} from \"lucide-react\"\n\nimport { NavMain } from \"@/registry/new-york/block/sidebar-01/components/nav-main\"\nimport { NavProjects } from \"@/registry/new-york/block/sidebar-01/components/nav-projects\"\nimport { NavSecondary } from \"@/registry/new-york/block/sidebar-01/components/nav-secondary\"\nimport { NavUser } from \"@/registry/new-york/block/sidebar-01/components/nav-user\"\nimport { StorageCard } from \"@/registry/new-york/block/sidebar-01/components/storage-card\"\nimport { TeamSwitcher } from \"@/registry/new-york/block/sidebar-01/components/team-switcher\"\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarItem,\n  SidebarLabel,\n} from \"@/registry/new-york/block/sidebar-01/ui/sidebar\"\nconst data = {\n  teams: [\n    {\n      name: \"Acme Inc\",\n      logo: Atom,\n      plan: \"Enterprise\",\n    },\n    {\n      name: \"Acme Corp.\",\n      logo: Eclipse,\n      plan: \"Startup\",\n    },\n    {\n      name: \"Evil Corp.\",\n      logo: Rabbit,\n      plan: \"Free\",\n    },\n  ],\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  navMain: [\n    {\n      title: \"Playground\",\n      url: \"#\",\n      icon: SquareTerminal,\n      isActive: true,\n      items: [\n        {\n          title: \"History\",\n          url: \"#\",\n          icon: History,\n          description: \"View your recent prompts\",\n        },\n        {\n          title: \"Starred\",\n          url: \"#\",\n          icon: Star,\n          description: \"Browse your starred prompts\",\n        },\n        {\n          title: \"Settings\",\n          url: \"#\",\n          icon: Settings2,\n          description: \"Configure your playground\",\n        },\n      ],\n    },\n    {\n      title: \"Models\",\n      url: \"#\",\n      icon: Bot,\n      items: [\n        {\n          title: \"Genesis\",\n          url: \"#\",\n          icon: Rabbit,\n          description: \"Our fastest model for general use cases.\",\n        },\n        {\n          title: \"Explorer\",\n          url: \"#\",\n          icon: Bird,\n          description: \"Performance and speed for efficiency.\",\n        },\n        {\n          title: \"Quantum\",\n          url: \"#\",\n          icon: Turtle,\n          description: \"The most powerful model for complex computations.\",\n        },\n      ],\n    },\n    {\n      title: \"Documentation\",\n      url: \"#\",\n      icon: BookOpen,\n      items: [\n        {\n          title: \"Introduction\",\n          url: \"#\",\n        },\n        {\n          title: \"Get Started\",\n          url: \"#\",\n        },\n        {\n          title: \"Tutorials\",\n          url: \"#\",\n        },\n        {\n          title: \"Changelog\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"API\",\n      url: \"#\",\n      icon: Code2,\n      items: [\n        {\n          title: \"Chat\",\n          url: \"#\",\n        },\n        {\n          title: \"Completion\",\n          url: \"#\",\n        },\n        {\n          title: \"Images\",\n          url: \"#\",\n        },\n        {\n          title: \"Video\",\n          url: \"#\",\n        },\n        {\n          title: \"Speech\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: Settings2,\n      items: [\n        {\n          title: \"General\",\n          url: \"#\",\n        },\n        {\n          title: \"Team\",\n          url: \"#\",\n        },\n        {\n          title: \"Billing\",\n          url: \"#\",\n        },\n        {\n          title: \"Limits\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n\n  navSecondary: [\n    {\n      title: \"Support\",\n      url: \"#\",\n      icon: LifeBuoy,\n    },\n    {\n      title: \"Feedback\",\n      url: \"#\",\n      icon: Send,\n    },\n  ],\n  projects: [\n    {\n      name: \"Design Engineering\",\n      url: \"#\",\n      icon: Frame,\n    },\n    {\n      name: \"Sales & Marketing\",\n      url: \"#\",\n      icon: PieChart,\n    },\n    {\n      name: \"Travel\",\n      url: \"#\",\n      icon: Map,\n    },\n  ],\n  searchResults: [\n    {\n      title: \"Routing Fundamentals\",\n      teaser:\n        \"The skeleton of every application is routing. This page will introduce you to the fundamental concepts of routing for the web and how to handle routing in Next.js.\",\n      url: \"#\",\n    },\n    {\n      title: \"Layouts and Templates\",\n      teaser:\n        \"The special files layout.js and template.js allow you to create UI that is shared between routes. This page will guide you through how and when to use these special files.\",\n      url: \"#\",\n    },\n    {\n      title: \"Data Fetching, Caching, and Revalidating\",\n      teaser:\n        \"Data fetching is a core part of any application. This page goes through how you can fetch, cache, and revalidate data in React and Next.js.\",\n      url: \"#\",\n    },\n    {\n      title: \"Server and Client Composition Patterns\",\n      teaser:\n        \"When building React applications, you will need to consider what parts of your application should be rendered on the server or the client. \",\n      url: \"#\",\n    },\n    {\n      title: \"Server Actions and Mutations\",\n      teaser:\n        \"Server Actions are asynchronous functions that are executed on the server. They can be used in Server and Client Components to handle form submissions and data mutations in Next.js applications.\",\n      url: \"#\",\n    },\n  ],\n}\n\nexport function AppSidebar() {\n  return (\n    <Sidebar>\n      <SidebarHeader>\n        <TeamSwitcher teams={data.teams} />\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarItem>\n          <SidebarLabel>Platform</SidebarLabel>\n          <NavMain items={data.navMain} searchResults={data.searchResults} />\n        </SidebarItem>\n        <SidebarItem>\n          <SidebarLabel>Projects</SidebarLabel>\n          <NavProjects projects={data.projects} />\n        </SidebarItem>\n        <SidebarItem className=\"mt-auto\">\n          <SidebarLabel>Help</SidebarLabel>\n          <NavSecondary items={data.navSecondary} />\n        </SidebarItem>\n        <SidebarItem>\n          <StorageCard />\n        </SidebarItem>\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n    </Sidebar>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/nav-main.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { ChevronRight, Search, type LucideIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/registry/new-york/hooks/use-mobile\"\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/registry/new-york/ui/collapsible\"\nimport {\n  Drawer,\n  DrawerContent,\n  DrawerTrigger,\n} from \"@/registry/new-york/ui/drawer\"\nimport { Input } from \"@/registry/new-york/ui/input\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/new-york/ui/popover\"\nimport { Separator } from \"@/registry/new-york/ui/separator\"\n\nexport function NavMain({\n  className,\n  items,\n  searchResults,\n}: {\n  items: {\n    title: string\n    url: string\n    icon: LucideIcon\n    isActive?: boolean\n    items?: {\n      title: string\n      url: string\n    }[]\n  }[]\n  searchResults: React.ComponentProps<typeof SidebarSearch>[\"results\"]\n} & React.ComponentProps<\"ul\">) {\n  return (\n    <ul className={cn(\"grid gap-0.5\", className)}>\n      <li>\n        <SidebarSearch results={searchResults} />\n      </li>\n      {items.map((item) => (\n        <Collapsible key={item.title} asChild defaultOpen={item.isActive}>\n          <li>\n            <div className=\"relative flex items-center\">\n              <Link\n                href={item.url}\n                className=\"min-w-8 flex h-8 flex-1 items-center gap-2 overflow-hidden rounded-md px-1.5 text-sm font-medium outline-none ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:ring-2\"\n              >\n                <item.icon className=\"h-4 w-4 shrink-0\" />\n                <div className=\"flex flex-1 overflow-hidden\">\n                  <div className=\"line-clamp-1 pr-6\">{item.title}</div>\n                </div>\n              </Link>\n              <CollapsibleTrigger asChild>\n                <Button\n                  variant=\"ghost\"\n                  className=\"absolute right-1 h-6 w-6 rounded-md p-0 ring-ring transition-all focus-visible:ring-2 data-[state=open]:rotate-90\"\n                >\n                  <ChevronRight className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"sr-only\">Toggle</span>\n                </Button>\n              </CollapsibleTrigger>\n            </div>\n            <CollapsibleContent className=\"px-4 py-0.5\">\n              <ul className=\"grid border-l px-2\">\n                {item.items?.map((subItem) => (\n                  <li key={subItem.title}>\n                    <Link\n                      href={subItem.url}\n                      className=\"min-w-8 flex h-8 items-center gap-2 overflow-hidden rounded-md px-2 text-sm font-medium text-muted-foreground ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:ring-2\"\n                    >\n                      <div className=\"line-clamp-1\">{subItem.title}</div>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </CollapsibleContent>\n          </li>\n        </Collapsible>\n      ))}\n    </ul>\n  )\n}\n\nfunction SidebarSearch({\n  results,\n}: {\n  results: {\n    title: string\n    teaser: string\n    url: string\n  }[]\n}) {\n  const isMobile = useIsMobile()\n\n  if (isMobile) {\n    return (\n      <Drawer>\n        <DrawerTrigger className=\"min-w-8 flex h-8 w-full flex-1 items-center gap-2 overflow-hidden rounded-md px-1.5 text-sm font-medium outline-none ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:ring-2 data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\">\n          <Search className=\"h-4 w-4 shrink-0\" />\n          <div className=\"flex flex-1 overflow-hidden\">\n            <div className=\"line-clamp-1 pr-6\">Search</div>\n          </div>\n        </DrawerTrigger>\n        <DrawerContent>\n          <form>\n            <div className=\"border-b p-2.5\">\n              <Input\n                type=\"search\"\n                placeholder=\"Search...\"\n                className=\"h-8 rounded-sm shadow-none focus-visible:ring-0\"\n              />\n            </div>\n          </form>\n          <div className=\"grid gap-1 p-1.5 text-sm\">\n            {results.map((result) => (\n              <Link\n                href={result.url}\n                key={result.title}\n                className=\"rounded-md p-2.5 outline-none ring-ring hover:bg-accent hover:text-accent-foreground focus-visible:ring-2\"\n              >\n                <div className=\"font-medium\">{result.title}</div>\n                <div className=\"line-clamp-2 text-muted-foreground\">\n                  {result.teaser}\n                </div>\n              </Link>\n            ))}\n            <Separator className=\"my-1.5\" />\n            <Link\n              href=\"#\"\n              className=\"rounded-md px-2.5 py-1 text-muted-foreground outline-none ring-ring hover:text-foreground focus-visible:ring-2\"\n            >\n              See all results\n            </Link>\n          </div>\n        </DrawerContent>\n      </Drawer>\n    )\n  }\n\n  return (\n    <Popover>\n      <PopoverTrigger className=\"min-w-8 flex h-8 w-full flex-1 items-center gap-2 overflow-hidden rounded-md px-1.5 text-sm font-medium outline-none ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:ring-2 data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\">\n        <Search className=\"h-4 w-4 shrink-0\" />\n        <div className=\"flex flex-1 overflow-hidden\">\n          <div className=\"line-clamp-1 pr-6\">Search</div>\n        </div>\n      </PopoverTrigger>\n      <PopoverContent\n        side=\"right\"\n        align=\"start\"\n        sideOffset={4}\n        className=\"w-96 p-0\"\n      >\n        <form>\n          <div className=\"border-b p-2.5\">\n            <Input\n              type=\"search\"\n              placeholder=\"Search...\"\n              className=\"h-8 rounded-sm shadow-none focus-visible:ring-0\"\n            />\n          </div>\n        </form>\n        <div className=\"grid gap-1 p-1.5 text-sm\">\n          {results.map((result) => (\n            <Link\n              href={result.url}\n              key={result.title}\n              className=\"rounded-md p-2.5 outline-none ring-ring hover:bg-accent hover:text-accent-foreground focus-visible:ring-2\"\n            >\n              <div className=\"font-medium\">{result.title}</div>\n              <div className=\"line-clamp-2 text-muted-foreground\">\n                {result.teaser}\n              </div>\n            </Link>\n          ))}\n          <Separator className=\"my-1.5\" />\n          <Link\n            href=\"#\"\n            className=\"rounded-md px-2.5 py-1 text-muted-foreground outline-none ring-ring hover:text-foreground focus-visible:ring-2\"\n          >\n            See all results\n          </Link>\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/nav-projects.tsx",
      "content": "import Link from \"next/link\"\nimport { MoreHorizontal, PlusSquare, type LucideIcon } from \"lucide-react\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/new-york/ui/dropdown-menu\"\n\nexport function NavProjects({\n  projects,\n  className,\n}: {\n  projects: {\n    name: string\n    url: string\n    icon: LucideIcon\n  }[]\n} & React.ComponentProps<\"ul\">) {\n  return (\n    <ul className={cn(\"grid gap-0.5\", className)}>\n      {projects.map((item) => (\n        <li\n          key={item.name}\n          className=\"has-[[data-state=open]]:bg-accent has-[[data-state=open]]:text-accent-foreground group relative rounded-md hover:bg-accent hover:text-accent-foreground\"\n        >\n          <Link\n            href={item.url}\n            className=\"flex h-7 items-center gap-2.5 overflow-hidden rounded-md px-1.5 text-xs outline-none ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:ring-2\"\n          >\n            <item.icon className=\"h-4 w-4 shrink-0 translate-x-0.5 text-muted-foreground\" />\n            <div className=\"line-clamp-1 grow overflow-hidden pr-6 font-medium\">\n              {item.name}\n            </div>\n          </Link>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"ghost\"\n                className=\"peer absolute right-1 top-0.5 h-6 w-6 shrink-0 rounded-md bg-accent p-0 text-accent-foreground opacity-0 ring-ring transition-all focus-visible:ring-2 group-focus-within:opacity-100 group-hover:opacity-100 data-[state=open]:bg-accent data-[state=open]:opacity-100\"\n              >\n                <MoreHorizontal className=\"h-4 w-4 text-muted-foreground\" />\n                <span className=\"sr-only\">Toggle</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent side=\"right\" align=\"start\" sideOffset={20}>\n              <DropdownMenuItem>Share</DropdownMenuItem>\n              <DropdownMenuItem>Rename</DropdownMenuItem>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>Archive</DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </li>\n      ))}\n      <li>\n        <button className=\"flex h-7 w-full items-center gap-2.5 overflow-hidden rounded-md px-1.5 text-left text-xs ring-ring transition-all hover:bg-muted focus-visible:outline-none focus-visible:ring-2\">\n          <PlusSquare className=\"h-4 w-4 shrink-0 translate-x-0.5 text-muted-foreground\" />\n          <div className=\"line-clamp-1 overflow-hidden font-medium text-muted-foreground\">\n            Add Project\n          </div>\n        </button>\n      </li>\n    </ul>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/nav-secondary.tsx",
      "content": "\"use client\"\n\nimport Link from \"next/link\"\nimport { type LucideIcon } from \"lucide-react\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\n\nexport function NavSecondary({\n  className,\n  items,\n}: {\n  items: {\n    title: string\n    url: string\n    icon: LucideIcon\n    items?: {\n      title: string\n      url: string\n    }[]\n  }[]\n} & React.ComponentProps<\"ul\">) {\n  if (!items?.length) {\n    return null\n  }\n\n  return (\n    <ul className={cn(\"grid gap-0.5\", className)}>\n      {items.map((item) => (\n        <li key={item.title}>\n          <Link\n            href={item.url}\n            className=\"flex h-7 items-center gap-2.5 overflow-hidden rounded-md px-1.5 text-xs ring-ring transition-all hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2\"\n          >\n            <item.icon className=\"h-4 w-4 shrink-0 translate-x-0.5 text-muted-foreground\" />\n            <div className=\"line-clamp-1 grow overflow-hidden pr-6 font-medium text-muted-foreground\">\n              {item.title}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/nav-user.tsx",
      "content": "import {\n  BadgeCheck,\n  Bell,\n  ChevronsUpDown,\n  CreditCard,\n  LogOut,\n} from \"lucide-react\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/new-york/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/new-york/ui/dropdown-menu\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger className=\"w-full rounded-md outline-none ring-ring hover:bg-accent focus-visible:ring-2 data-[state=open]:bg-accent\">\n        <div className=\"flex items-center gap-2 px-2 py-1.5 text-left text-sm transition-all\">\n          <Avatar className=\"h-7 w-7 rounded-md border\">\n            <AvatarImage\n              src={user.avatar}\n              alt={user.name}\n              className=\"animate-in fade-in-50 zoom-in-90\"\n            />\n            <AvatarFallback className=\"rounded-md\">CN</AvatarFallback>\n          </Avatar>\n          <div className=\"grid flex-1 leading-none\">\n            <div className=\"font-medium\">{user.name}</div>\n            <div className=\"overflow-hidden text-xs text-muted-foreground\">\n              <div className=\"line-clamp-1\">{user.email}</div>\n            </div>\n          </div>\n          <ChevronsUpDown className=\"ml-auto mr-0.5 h-4 w-4 text-muted-foreground/50\" />\n        </div>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent\n        className=\"w-56\"\n        align=\"end\"\n        side=\"right\"\n        sideOffset={4}\n      >\n        <DropdownMenuLabel className=\"p-0 font-normal\">\n          <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm transition-all\">\n            <Avatar className=\"h-7 w-7 rounded-md\">\n              <AvatarImage src={user.avatar} alt={user.name} />\n              <AvatarFallback>CN</AvatarFallback>\n            </Avatar>\n            <div className=\"grid flex-1\">\n              <div className=\"font-medium\">{user.name}</div>\n              <div className=\"overflow-hidden text-xs text-muted-foreground\">\n                <div className=\"line-clamp-1\">{user.email}</div>\n              </div>\n            </div>\n          </div>\n        </DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem className=\"gap-2\">\n            <BadgeCheck className=\"h-4 w-4 text-muted-foreground\" />\n            Account\n          </DropdownMenuItem>\n          <DropdownMenuItem className=\"gap-2\">\n            <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\n            Billing\n          </DropdownMenuItem>\n          <DropdownMenuItem className=\"gap-2\">\n            <Bell className=\"h-4 w-4 text-muted-foreground\" />\n            Notifications\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"gap-2\">\n          <LogOut className=\"h-4 w-4 text-muted-foreground\" />\n          Log out\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/storage-card.tsx",
      "content": "import { Database } from \"lucide-react\"\n\nimport { Card, CardContent } from \"@/registry/new-york/ui/card\"\nimport { Progress } from \"@/registry/new-york/ui/progress\"\n\nexport function StorageCard() {\n  return (\n    <Card className=\"rounded-md text-xs shadow-sm\">\n      <CardContent className=\"flex items-start gap-2.5 p-2.5\">\n        <div className=\"flex h-9 w-9 shrink-0 items-center justify-center rounded-md bg-accent text-accent-foreground\">\n          <Database className=\"h-5 w-5 text-muted-foreground\" />\n        </div>\n        <div className=\"grid flex-1 gap-1\">\n          <p className=\"font-medium\">Running out of space?</p>\n          <p className=\"text-muted-foreground\">79.2 GB / 100 GB used</p>\n          <Progress\n            value={79.2}\n            className=\"mt-1\"\n            aria-label=\"79.2 GB / 100 GB used\"\n          />\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/components/team-switcher.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronsUpDown, Plus } from \"lucide-react\"\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from \"@/registry/new-york/ui/dropdown-menu\"\n\nexport function TeamSwitcher({\n  teams,\n}: {\n  teams: {\n    name: string\n    logo: React.ElementType\n    plan: string\n  }[]\n}) {\n  const [activeTeam, setActiveTeam] = React.useState(teams[0])\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger className=\"w-full rounded-md ring-ring hover:bg-accent hover:text-accent-foreground focus-visible:outline-none focus-visible:ring-2 data-[state=open]:bg-accent\">\n        <div className=\"flex items-center gap-1.5 overflow-hidden px-2 py-1.5 text-left text-sm transition-all\">\n          <div className=\"flex h-5 w-5 items-center justify-center rounded-sm bg-primary text-primary-foreground\">\n            <activeTeam.logo className=\"h-3.5 w-3.5 shrink-0\" />\n          </div>\n          <div className=\"line-clamp-1 flex-1 pr-2 font-medium\">\n            {activeTeam.name}\n          </div>\n          <ChevronsUpDown className=\"ml-auto h-4 w-4 text-muted-foreground/50\" />\n        </div>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent\n        className=\"w-64\"\n        align=\"start\"\n        side=\"right\"\n        sideOffset={4}\n      >\n        <DropdownMenuLabel className=\"text-xs text-muted-foreground\">\n          Teams\n        </DropdownMenuLabel>\n        {teams.map((team, index) => (\n          <DropdownMenuItem\n            key={team.name}\n            onClick={() => setActiveTeam(team)}\n            className=\"items-start gap-2 px-1.5\"\n          >\n            <div className=\"flex h-8 w-8 items-center justify-center rounded-sm bg-primary text-primary-foreground\">\n              <team.logo className=\"h-5 w-5 shrink-0\" />\n            </div>\n            <div className=\"grid flex-1 leading-tight\">\n              <div className=\"line-clamp-1 font-medium\">{team.name}</div>\n              <div className=\"overflow-hidden text-xs text-muted-foreground\">\n                <div className=\"line-clamp-1\">{team.plan}</div>\n              </div>\n            </div>\n            <DropdownMenuShortcut className=\"self-center\">\n              ⌘{index + 1}\n            </DropdownMenuShortcut>\n          </DropdownMenuItem>\n        ))}\n        <DropdownMenuSeparator />\n        <DropdownMenuItem className=\"gap-2 px-1.5\">\n          <div className=\"flex h-8 w-8 items-center justify-center rounded-md border bg-background\">\n            <Plus className=\"h-5 w-5\" />\n          </div>\n          <div className=\"font-medium text-muted-foreground\">Add workspace</div>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "block/sidebar-01/hooks/use-sidebar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nexport function useSidebar() {\n  const [state, setState] = React.useState<\"closed\" | \"open\">(\"open\")\n\n  return {\n    open: state === \"open\",\n    onOpenChange: (open: boolean) => setState(open ? \"open\" : \"closed\"),\n  }\n}\n",
      "type": "registry:hook"
    },
    {
      "path": "block/sidebar-01/ui/sidebar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/registry/new-york/hooks/use-mobile\"\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport { Sheet, SheetContent } from \"@/registry/new-york/ui/sheet\"\n\nexport const SIDEBAR_STATE_COOKIE = \"sidebar:state\"\n\ntype SidebarContext = {\n  state: \"open\" | \"closed\"\n  open: boolean\n  onOpenChange: (open: boolean) => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext>({\n  state: \"open\",\n  open: true,\n  onOpenChange: () => {},\n})\n\nfunction useSidebar() {\n  return React.useContext(SidebarContext)\n}\n\nconst SidebarLayout = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n  }\n>(({ defaultOpen, className, ...props }, ref) => {\n  const [open, setOpen] = React.useState(defaultOpen ?? true)\n\n  const onOpenChange = React.useCallback((open: boolean) => {\n    setOpen(open)\n    document.cookie = `${SIDEBAR_STATE_COOKIE}=${open}; path=/; max-age=${\n      60 * 60 * 24 * 7\n    }`\n  }, [])\n\n  const state = open ? \"open\" : \"closed\"\n\n  return (\n    <SidebarContext.Provider value={{ state, open, onOpenChange }}>\n      <div\n        ref={ref}\n        data-sidebar={state}\n        style={\n          {\n            \"--sidebar-width\": \"16rem\",\n          } as React.CSSProperties\n        }\n        className={cn(\n          \"flex min-h-screen bg-accent/50 pl-0 transition-all duration-300 ease-in-out data-[sidebar=closed]:pl-0 sm:pl-[--sidebar-width]\",\n          className\n        )}\n        {...props}\n      />\n    </SidebarContext.Provider>\n  )\n})\nSidebarLayout.displayName = \"SidebarLayout\"\n\nconst SidebarTrigger = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { open, onOpenChange } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-8 w-8\", className)}\n      onClick={() => onOpenChange(!open)}\n      {...props}\n    >\n      <PanelLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst Sidebar = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\n  ({ className, children }, ref) => {\n    const isMobile = useIsMobile()\n    const { open, onOpenChange } = useSidebar()\n\n    const sidebar = (\n      <div\n        ref={ref}\n        className={cn(\"flex h-full flex-col border-r bg-background\", className)}\n      >\n        {children}\n      </div>\n    )\n\n    if (isMobile) {\n      return (\n        <Sheet open={open} onOpenChange={onOpenChange}>\n          <SheetContent\n            className=\"w-[260px] p-0 md:w-[--sidebar-width] [&>button]:hidden\"\n            side=\"left\"\n          >\n            {sidebar}\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <aside className=\"fixed inset-y-0 left-0 z-10 hidden w-[--sidebar-width] transition-all duration-300 ease-in-out md:block [[data-sidebar=closed]_&]:left-[calc(var(--sidebar-width)*-1)]\">\n        {sidebar}\n      </aside>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"flex items-center border-b px-2.5 py-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"flex items-center border-t px-2.5 py-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"flex flex-1 flex-col gap-5 overflow-auto py-4\", className)}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarItem = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"grid gap-2 px-2.5\", className)} {...props} />\n  )\n})\nSidebarItem.displayName = \"SidebarItem\"\n\nconst SidebarLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"px-1.5 text-xs font-medium text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarLabel.displayName = \"SidebarLabel\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarItem,\n  SidebarLabel,\n  SidebarLayout,\n  SidebarTrigger,\n  useSidebar,\n}\n",
      "type": "registry:ui"
    }
  ]
}