{
  "dependencies": [
    "@udecode/plate-comments"
  ],
  "doc": {
    "description": "A toolbar button for adding inline comments.",
    "docs": [
      {
        "route": "/docs/comments"
      },
      {
        "route": "https://pro.platejs.org/docs/components/comment-toolbar-button"
      }
    ],
    "examples": [
      "comments-demo",
      "floating-toolbar-demo",
      "comments-pro"
    ]
  },
  "files": [
    {
      "path": "plate-ui/comment-toolbar-button.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport { getDraftCommentKey } from '@udecode/plate-comments';\nimport { useEditorPlugin } from '@udecode/plate/react';\nimport { MessageSquareTextIcon } from 'lucide-react';\n\nimport { commentsPlugin } from '@/components/editor/plugins/comments-plugin';\n\nimport { ToolbarButton } from './toolbar';\n\nexport function CommentToolbarButton() {\n  const { editor, setOption, tf } = useEditorPlugin(commentsPlugin);\n\n  const onCommentToolbarButton = React.useCallback(() => {\n    if (!editor.selection) return;\n\n    tf.comment.setDraft();\n    editor.tf.collapse();\n    setOption('activeId', getDraftCommentKey());\n    setOption('commentingBlock', editor.selection.focus.path.slice(0, 1));\n  }, [editor.selection, editor.tf, setOption, tf.comment]);\n\n  return (\n    <ToolbarButton\n      onClick={onCommentToolbarButton}\n      data-plate-prevent-overlay\n      tooltip=\"Comment\"\n    >\n      <MessageSquareTextIcon />\n    </ToolbarButton>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/plate-ui/comment-toolbar-button.tsx"
    }
  ],
  "name": "comment-toolbar-button",
  "registryDependencies": [],
  "type": "registry:ui",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}