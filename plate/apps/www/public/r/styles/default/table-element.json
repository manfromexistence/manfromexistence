{
  "dependencies": [
    "@udecode/plate-table",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-popover"
  ],
  "doc": {
    "description": "A table component with floating toolbar and border customization.",
    "docs": [
      {
        "route": "/docs/table"
      },
      {
        "route": "https://pro.platejs.org/docs/components/table-element"
      }
    ],
    "examples": [
      "table-demo"
    ]
  },
  "files": [
    {
      "path": "plate-ui/table-element.tsx",
      "content": "'use client';\n\nimport React from 'react';\n\nimport type * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport type { TTableElement } from '@udecode/plate-table';\n\nimport { PopoverAnchor } from '@radix-ui/react-popover';\nimport { cn, withRef } from '@udecode/cn';\nimport { BlockSelectionPlugin } from '@udecode/plate-selection/react';\nimport {\n  TablePlugin,\n  TableProvider,\n  useTableBordersDropdownMenuContentState,\n  useTableElement,\n  useTableMergeState,\n} from '@udecode/plate-table/react';\nimport {\n  useEditorPlugin,\n  useEditorRef,\n  useEditorSelector,\n  useElement,\n  usePluginOption,\n  useReadOnly,\n  useRemoveNodeButton,\n  useSelected,\n  withHOC,\n} from '@udecode/plate/react';\nimport {\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n  CombineIcon,\n  Grid2X2Icon,\n  SquareSplitHorizontalIcon,\n  Trash2Icon,\n  XIcon,\n} from 'lucide-react';\n\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n} from './dropdown-menu';\nimport { PlateElement } from './plate-element';\nimport { Popover, PopoverContent } from './popover';\nimport {\n  BorderAll,\n  BorderBottom,\n  BorderLeft,\n  BorderNone,\n  BorderRight,\n  BorderTop,\n} from './table-icons';\nimport { Toolbar, ToolbarButton, ToolbarGroup } from './toolbar';\n\nexport const TableElement = withHOC(\n  TableProvider,\n  withRef<typeof PlateElement>(({ children, className, ...props }, ref) => {\n    const readOnly = useReadOnly();\n    const isSelectionAreaVisible = usePluginOption(\n      BlockSelectionPlugin,\n      'isSelectionAreaVisible'\n    );\n    const hasControls = !readOnly && !isSelectionAreaVisible;\n    const selected = useSelected();\n    const {\n      isSelectingCell,\n      marginLeft,\n      props: tableProps,\n    } = useTableElement();\n\n    const content = (\n      <PlateElement\n        className={cn(\n          className,\n          'overflow-x-auto py-5',\n          hasControls && '-ml-2'\n        )}\n        style={{ paddingLeft: marginLeft }}\n        blockSelectionClassName={cn(hasControls && 'left-2')}\n        {...props}\n      >\n        <div className=\"group/table relative w-fit\">\n          <table\n            ref={ref}\n            className={cn(\n              'mr-0 ml-px table h-px table-fixed border-collapse',\n              isSelectingCell && 'selection:bg-transparent'\n            )}\n            {...tableProps}\n          >\n            <tbody className=\"min-w-full\">{children}</tbody>\n          </table>\n        </div>\n      </PlateElement>\n    );\n\n    if (readOnly || !selected) {\n      return content;\n    }\n\n    return <TableFloatingToolbar>{content}</TableFloatingToolbar>;\n  })\n);\n\nexport const TableFloatingToolbar = withRef<typeof PopoverContent>(\n  ({ children, ...props }, ref) => {\n    const { tf } = useEditorPlugin(TablePlugin);\n    const element = useElement<TTableElement>();\n    const { props: buttonProps } = useRemoveNodeButton({ element });\n    const collapsed = useEditorSelector(\n      (editor) => !editor.api.isExpanded(),\n      []\n    );\n\n    const { canMerge, canSplit } = useTableMergeState();\n\n    return (\n      <Popover open={canMerge || canSplit || collapsed} modal={false}>\n        <PopoverAnchor asChild>{children}</PopoverAnchor>\n        <PopoverContent\n          ref={ref}\n          asChild\n          onOpenAutoFocus={(e) => e.preventDefault()}\n          contentEditable={false}\n          {...props}\n        >\n          <Toolbar\n            className=\"flex scrollbar-hide w-auto max-w-[80vw] flex-row overflow-x-auto rounded-md border bg-popover p-1 shadow-md print:hidden\"\n            contentEditable={false}\n          >\n            <ToolbarGroup>\n              {canMerge && (\n                <ToolbarButton\n                  onClick={() => tf.table.merge()}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Merge cells\"\n                >\n                  <CombineIcon />\n                </ToolbarButton>\n              )}\n              {canSplit && (\n                <ToolbarButton\n                  onClick={() => tf.table.split()}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Split cell\"\n                >\n                  <SquareSplitHorizontalIcon />\n                </ToolbarButton>\n              )}\n\n              <DropdownMenu modal={false}>\n                <DropdownMenuTrigger asChild>\n                  <ToolbarButton tooltip=\"Cell borders\">\n                    <Grid2X2Icon />\n                  </ToolbarButton>\n                </DropdownMenuTrigger>\n\n                <DropdownMenuPortal>\n                  <TableBordersDropdownMenuContent />\n                </DropdownMenuPortal>\n              </DropdownMenu>\n\n              {collapsed && (\n                <ToolbarGroup>\n                  <ToolbarButton tooltip=\"Delete table\" {...buttonProps}>\n                    <Trash2Icon />\n                  </ToolbarButton>\n                </ToolbarGroup>\n              )}\n            </ToolbarGroup>\n\n            {collapsed && (\n              <ToolbarGroup>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.insert.tableRow({ before: true });\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Insert row before\"\n                >\n                  <ArrowUp />\n                </ToolbarButton>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.insert.tableRow();\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Insert row after\"\n                >\n                  <ArrowDown />\n                </ToolbarButton>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.remove.tableRow();\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Delete row\"\n                >\n                  <XIcon />\n                </ToolbarButton>\n              </ToolbarGroup>\n            )}\n\n            {collapsed && (\n              <ToolbarGroup>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.insert.tableColumn({ before: true });\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Insert column before\"\n                >\n                  <ArrowLeft />\n                </ToolbarButton>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.insert.tableColumn();\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Insert column after\"\n                >\n                  <ArrowRight />\n                </ToolbarButton>\n                <ToolbarButton\n                  onClick={() => {\n                    tf.remove.tableColumn();\n                  }}\n                  onMouseDown={(e) => e.preventDefault()}\n                  tooltip=\"Delete column\"\n                >\n                  <XIcon />\n                </ToolbarButton>\n              </ToolbarGroup>\n            )}\n          </Toolbar>\n        </PopoverContent>\n      </Popover>\n    );\n  }\n);\n\nexport const TableBordersDropdownMenuContent = withRef<\n  typeof DropdownMenuPrimitive.Content\n>((props, ref) => {\n  const editor = useEditorRef();\n  const {\n    getOnSelectTableBorder,\n    hasBottomBorder,\n    hasLeftBorder,\n    hasNoBorders,\n    hasOuterBorders,\n    hasRightBorder,\n    hasTopBorder,\n  } = useTableBordersDropdownMenuContentState();\n\n  return (\n    <DropdownMenuContent\n      ref={ref}\n      className={cn('min-w-[220px]')}\n      onCloseAutoFocus={(e) => {\n        e.preventDefault();\n        editor.tf.focus();\n      }}\n      align=\"start\"\n      side=\"right\"\n      sideOffset={0}\n      {...props}\n    >\n      <DropdownMenuGroup>\n        <DropdownMenuCheckboxItem\n          checked={hasTopBorder}\n          onCheckedChange={getOnSelectTableBorder('top')}\n        >\n          <BorderTop />\n          <div>Top Border</div>\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={hasRightBorder}\n          onCheckedChange={getOnSelectTableBorder('right')}\n        >\n          <BorderRight />\n          <div>Right Border</div>\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={hasBottomBorder}\n          onCheckedChange={getOnSelectTableBorder('bottom')}\n        >\n          <BorderBottom />\n          <div>Bottom Border</div>\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={hasLeftBorder}\n          onCheckedChange={getOnSelectTableBorder('left')}\n        >\n          <BorderLeft />\n          <div>Left Border</div>\n        </DropdownMenuCheckboxItem>\n      </DropdownMenuGroup>\n\n      <DropdownMenuGroup>\n        <DropdownMenuCheckboxItem\n          checked={hasNoBorders}\n          onCheckedChange={getOnSelectTableBorder('none')}\n        >\n          <BorderNone />\n          <div>No Border</div>\n        </DropdownMenuCheckboxItem>\n        <DropdownMenuCheckboxItem\n          checked={hasOuterBorders}\n          onCheckedChange={getOnSelectTableBorder('outer')}\n        >\n          <BorderAll />\n          <div>Outside Borders</div>\n        </DropdownMenuCheckboxItem>\n      </DropdownMenuGroup>\n    </DropdownMenuContent>\n  );\n});\n",
      "type": "registry:ui",
      "target": "components/plate-ui/table-element.tsx"
    },
    {
      "path": "plate-ui/table-icons.tsx",
      "content": "'use client';\n\nimport type { LucideProps } from 'lucide-react';\n\nexport const BorderAll = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M0.25 1C0.25 0.585786 0.585786 0.25 1 0.25H14C14.4142 0.25 14.75 0.585786 14.75 1V14C14.75 14.4142 14.4142 14.75 14 14.75H1C0.585786 14.75 0.25 14.4142 0.25 14V1ZM1.75 1.75V13.25H13.25V1.75H1.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    ></path>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"5\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"3\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"5\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"3\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"9\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"11\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"9\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"11\"></rect>\n  </svg>\n);\n\nexport const BorderBottom = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M1 13.25L14 13.25V14.75L1 14.75V13.25Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    ></path>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"5\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"5\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"3\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"3\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"5\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"5\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"3\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"3\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"9\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"9\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"11\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"11\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"9\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"9\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"7\" y=\"11\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"13\" y=\"11\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"5\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"3\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"7\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"1\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"9\"></rect>\n    <rect fill=\"currentColor\" height=\"1\" rx=\".5\" width=\"1\" x=\"1\" y=\"11\"></rect>\n  </svg>\n);\n\nexport const BorderLeft = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M1.75 1L1.75 14L0.249999 14L0.25 1L1.75 1Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    ></path>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 10 7)\"\n      width=\"1\"\n      x=\"10\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 10 13)\"\n      width=\"1\"\n      x=\"10\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 12 7)\"\n      width=\"1\"\n      x=\"12\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 12 13)\"\n      width=\"1\"\n      x=\"12\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 7)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 7)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 13)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 13)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 5)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"5\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 5)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"5\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 3)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"3\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 3)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"3\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 9)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"9\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 9)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"9\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 11)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"11\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 11)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"11\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 6 7)\"\n      width=\"1\"\n      x=\"6\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 6 13)\"\n      width=\"1\"\n      x=\"6\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 4 7)\"\n      width=\"1\"\n      x=\"4\"\n      y=\"7\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 4 13)\"\n      width=\"1\"\n      x=\"4\"\n      y=\"13\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 10 1)\"\n      width=\"1\"\n      x=\"10\"\n      y=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 12 1)\"\n      width=\"1\"\n      x=\"12\"\n      y=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 8 1)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 14 1)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 6 1)\"\n      width=\"1\"\n      x=\"6\"\n      y=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(90 4 1)\"\n      width=\"1\"\n      x=\"4\"\n      y=\"1\"\n    ></rect>\n  </svg>\n);\n\nexport const BorderNone = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"5.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"5.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"3.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"3.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"5\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"5\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"5\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"3\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"3\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"3\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"9\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"9\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"9\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"11\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"11\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"11\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"9.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"9.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"7\"\n      y=\"11.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"13\"\n      y=\"11.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"5.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"3.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"7.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"13.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"1.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"9.025\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      width=\"1\"\n      x=\"1\"\n      y=\"11.025\"\n    ></rect>\n  </svg>\n);\n\nexport const BorderRight = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M13.25 1L13.25 14L14.75 14L14.75 1L13.25 1Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    ></path>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 5 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 5 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 3 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 3 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 5)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 5)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 3)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 3)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 9)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 9)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 11)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 11)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 9 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 9 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 11 7)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 11 13)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 5 1)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 3 1)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 7 1)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 1 1)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 9 1)\"\n      width=\"1\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"matrix(0 1 1 0 11 1)\"\n      width=\"1\"\n    ></rect>\n  </svg>\n);\n\nexport const BorderTop = (props: LucideProps) => (\n  <svg\n    fill=\"none\"\n    height=\"15\"\n    viewBox=\"0 0 15 15\"\n    width=\"15\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      clipRule=\"evenodd\"\n      d=\"M14 1.75L1 1.75L1 0.249999L14 0.25L14 1.75Z\"\n      fill=\"currentColor\"\n      fillRule=\"evenodd\"\n    ></path>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 10)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"10\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 10)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"10\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 12)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"12\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 12)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"12\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 8)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 14)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 8)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 14)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 10 8)\"\n      width=\"1\"\n      x=\"10\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 10 14)\"\n      width=\"1\"\n      x=\"10\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 12 8)\"\n      width=\"1\"\n      x=\"12\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 12 14)\"\n      width=\"1\"\n      x=\"12\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 6 8)\"\n      width=\"1\"\n      x=\"6\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 6 14)\"\n      width=\"1\"\n      x=\"6\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 4 8)\"\n      width=\"1\"\n      x=\"4\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 4 14)\"\n      width=\"1\"\n      x=\"4\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 6)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"6\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 6)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"6\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 8 4)\"\n      width=\"1\"\n      x=\"8\"\n      y=\"4\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 2 4)\"\n      width=\"1\"\n      x=\"2\"\n      y=\"4\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 10)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"10\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 12)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"12\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 8)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"8\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 14)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"14\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 6)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"6\"\n    ></rect>\n    <rect\n      fill=\"currentColor\"\n      height=\"1\"\n      rx=\".5\"\n      transform=\"rotate(-180 14 4)\"\n      width=\"1\"\n      x=\"14\"\n      y=\"4\"\n    ></rect>\n  </svg>\n);\n",
      "type": "registry:ui",
      "target": "components/plate-ui/table-icons.tsx"
    },
    {
      "path": "plate-ui/table-element-static.tsx",
      "content": "import React from 'react';\n\nimport type { SlateElementProps } from '@udecode/plate';\n\nimport { cn } from '@udecode/cn';\nimport { SlateElement } from '@udecode/plate';\nimport { type TTableElement, BaseTablePlugin } from '@udecode/plate-table';\n\nexport const TableElementStatic = ({\n  children,\n  className,\n  ...props\n}: SlateElementProps<TTableElement>) => {\n  const { disableMarginLeft } = props.editor.getOptions(BaseTablePlugin);\n\n  const marginLeft = disableMarginLeft ? 0 : props.element.marginLeft;\n\n  return (\n    <SlateElement\n      className={cn(className, 'overflow-x-auto py-5')}\n      style={{ paddingLeft: marginLeft }}\n      {...props}\n    >\n      <div className=\"group/table relative w-fit\">\n        <table className=\"mr-0 ml-px table h-px table-fixed border-collapse\">\n          <tbody className=\"min-w-full\">{children}</tbody>\n        </table>\n      </div>\n    </SlateElement>\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/plate-ui/table-element-static.tsx"
    }
  ],
  "name": "table-element",
  "registryDependencies": [
    "dropdown-menu",
    "plate-element"
  ],
  "type": "registry:ui",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}