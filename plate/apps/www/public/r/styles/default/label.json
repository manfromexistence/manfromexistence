{
  "dependencies": [
    "@radix-ui/react-label"
  ],
  "doc": {
    "description": "Renders an accessible label associated with controls.",
    "links": {
      "doc": "https://ui.shadcn.com/docs/components/label"
    }
  },
  "files": [
    {
      "path": "plate-ui/label.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cn } from '@udecode/cn';\nimport { type VariantProps, cva } from 'class-variance-authority';\n\nconst labelVariants = cva(\n  'text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n",
      "type": "registry:ui",
      "target": "components/plate-ui/label.tsx"
    }
  ],
  "name": "label",
  "registryDependencies": [],
  "type": "registry:ui",
  "$schema": "https://platejs.org/schema/registry-item.json",
  "author": "udecode (https://platejs.org)"
}