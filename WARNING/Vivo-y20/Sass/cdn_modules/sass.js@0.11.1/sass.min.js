!function(e,t){"use strict";"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?module.exports=t():e.Sass=t()}(this,function(){function r(){}var s,e=function(){"use strict";if("undefined"!=typeof __dirname)return __dirname;if("undefined"==typeof document||!document.getElementsByTagName)return null;var e,t=document.currentScript||(e=document.getElementsByTagName("script"))[e.length-1],s=t&&t.src;return s?"/sass.js"===s.slice(-8)?s.slice(0,-8):"/sass.sync.js"===s.slice(-13)?s.slice(0,-13):null:null}()||".",i=[].slice;function t(e){if(!e&&!s)throw new Error("Sass needs to be initialized with the URL of sass.worker.js - either via Sass.setWorkerUrl(url) or by new Sass(url)");for(var t in s=s||e,this)"function"==typeof this[t]&&(this[t]=this[t].bind(this));this._callbacks={},this._worker=new Worker(e||s),this._worker.addEventListener("message",this._handleWorkerMessage,!1)}t.setWorkerUrl=function(e){s=e},t.prototype={style:t.style={nested:0,expanded:1,compact:2,compressed:3},comments:t.comments={none:0,default:1},destroy:function(){this._worker&&this._worker.terminate(),this._worker=null,this._callbacks={},this._importer=null},_handleWorkerMessage:function(e){e.data.command&&this[e.data.command](e.data.args),this._callbacks[e.data.id]&&this._callbacks[e.data.id](e.data.result),delete this._callbacks[e.data.id]},_dispatch:function(e,t){if(!this._worker)throw new Error("Sass worker has been terminated");e.id="cb"+Date.now()+Math.random(),this._callbacks[e.id]=t,this._worker.postMessage(e)},_importerInit:function(e){var t=function(e){this._worker.postMessage({command:"_importerFinish",args:[e]})}.bind(this);try{this._importer(e[0],t)}catch(e){throw t({error:e.message}),e}},importer:function(e,t){if("function"!=typeof e&&null!==e)throw new Error("importer callback must either be a function or null");this._importer=e,this._worker.postMessage({command:"importer",args:[Boolean(e)]}),t&&t()}};return"writeFile readFile listFiles removeFile clearFiles lazyFiles preloadFiles options compile compileFile".split(" ").forEach(function(s){t.prototype[s]=function(){var e=i.call(arguments,-1)[0],t=i.call(arguments,0,-1);"function"!=typeof e&&(t.push(e),e=r),this._dispatch({command:s,args:t},e)}}),t.setWorkerUrl(e+"/sass.worker.js"),t});