{
  "componentDescription": "",
  "propDescriptions": {
    "classes": { "description": "Override or extend the styles applied to the component." },
    "defaultValue": {
      "description": "The default value. Use when the component is not controlled."
    },
    "disabled": { "description": "If <code>true</code>, the component is disabled." },
    "emptyIcon": { "description": "The icon to display when empty." },
    "emptyLabelText": { "description": "The label read when the rating input is empty." },
    "getLabelText": {
      "description": "Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating. This is important for screen reader users.<br>For localization purposes, you can use the provided <a href=\"/material-ui/guides/localization/\">translations</a>.",
      "typeDescriptions": { "value": "The rating label&#39;s value to format." }
    },
    "highlightSelectedOnly": {
      "description": "If <code>true</code>, only the selected icon will be highlighted."
    },
    "icon": { "description": "The icon to display." },
    "IconContainerComponent": { "description": "The component containing the icon." },
    "max": { "description": "Maximum rating." },
    "name": {
      "description": "The name attribute of the radio <code>input</code> elements. This input <code>name</code> should be unique within the page. Being unique within a form is insufficient since the <code>name</code> is used to generated IDs."
    },
    "onChange": {
      "description": "Callback fired when the value changes.",
      "typeDescriptions": {
        "event": "The event source of the callback.",
        "value": "The new value."
      }
    },
    "onChangeActive": {
      "description": "Callback function that is fired when the hover state changes.",
      "typeDescriptions": {
        "event": "The event source of the callback.",
        "value": "The new value."
      }
    },
    "precision": { "description": "The minimum increment value change allowed." },
    "readOnly": { "description": "Removes all hover effects and pointer events." },
    "size": { "description": "The size of the component." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "value": { "description": "The rating value." }
  },
  "classDescriptions": {
    "decimal": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "decimals are necessary"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>disabled={true}</code>"
    },
    "focusVisible": {
      "description": "State class applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "keyboard focused"
    },
    "icon": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the icon wrapping elements"
    },
    "iconActive": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "active"
    },
    "iconEmpty": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "empty"
    },
    "iconFilled": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "filled"
    },
    "iconFocus": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "focus"
    },
    "iconHover": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the icon wrapping elements",
      "conditions": "hover"
    },
    "label": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the label elements" },
    "labelEmptyValueActive": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the label of the &quot;no value&quot; input",
      "conditions": "it is active"
    },
    "readOnly": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>readOnly={true}</code>"
    },
    "root": { "description": "Styles applied to the root element." },
    "sizeLarge": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"large\"</code>"
    },
    "sizeMedium": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"medium\"</code>"
    },
    "sizeSmall": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>size=\"small\"</code>"
    },
    "visuallyHidden": { "description": "Visually hide an element." }
  }
}
