import { MD3Palettes } from './Theme.types';

// convert all these values to CSS vars
const createDarkColorScheme = (
  getCssVar: (cssVar: string, defaultVal: string) => string,
  palette: MD3Palettes,
) => ({
  surfaceTint: getCssVar('ref-palette-primary-40', palette.primary[40]),
  onErrorContainer: getCssVar('ref-palette-error-90', palette.error[90]),
  onError: getCssVar('ref-palette-error-20', palette.error[20]),
  errorContainer: getCssVar('ref-palette-error-30', palette.error[30]),
  onTertiaryContainer: getCssVar('ref-palette-tertiary-90', palette.tertiary[90]),
  onTertiary: getCssVar('ref-palette-tertiary-20', palette.tertiary[20]),
  tertiaryContainer: getCssVar('ref-palette-tertiary-30', palette.tertiary[30]),
  tertiary: getCssVar('ref-palette-tertiary-80', palette.tertiary[80]),
  shadow: getCssVar('ref-palette-common-black', palette.common.black),
  error: getCssVar('ref-palette-error-80', palette.error[80]),
  outline: getCssVar('ref-palette-neutralVariant-60', palette.neutralVariant[60]),
  outlineVariant: getCssVar('ref-palette-neutralVariant-30', palette.neutralVariant[30]),
  onBackground: getCssVar('ref-palette-neutral-90', palette.neutral[90]),
  background: getCssVar('ref-palette-neutral-10', palette.neutral[10]),
  inverseOnSurface: getCssVar('ref-palette-neutral-20', palette.neutral[20]),
  inverseSurface: getCssVar('ref-palette-neutral-90', palette.neutral[90]),
  onSurfaceVariant: getCssVar('ref-palette-neutralVariant-80', palette.neutralVariant[80]),
  onSurface: getCssVar('ref-palette-neutral-90', palette.neutral[90]),
  surfaceVariant: getCssVar('ref-palette-neutralVariant-30', palette.neutralVariant[30]),
  surface: getCssVar('ref-palette-neutral-10', palette.neutral[10]),
  surfaceContainerLow: getCssVar('ref-palette-neutral-10', palette.neutral[10]),
  surfaceContainerHigh: getCssVar('ref-palette-neutral-17', palette.neutral[17]),
  surfaceContainerHighest: getCssVar('ref-palette-neutral-22', palette.neutral[22]),
  onSecondaryContainer: getCssVar('ref-palette-secondary-90', palette.secondary[90]),
  onSecondary: getCssVar('ref-palette-secondary-20', palette.secondary[20]),
  secondaryContainer: getCssVar('ref-palette-secondary-30', palette.secondary[30]),
  secondary: getCssVar('ref-palette-secondary-80', palette.secondary[80]),
  inversePrimary: getCssVar('ref-palette-primary-40', palette.primary[40]),
  onPrimaryContainer: getCssVar('ref-palette-primary-90', palette.primary[90]),
  onPrimary: getCssVar('ref-palette-primary-20', palette.primary[20]),
  primaryContainer: getCssVar('ref-palette-primary-30', palette.primary[30]),
  primary: getCssVar('ref-palette-primary-80', palette.primary[80]),
  info: getCssVar('ref-palette-info-80', palette.info[80]),
  onInfo: getCssVar('ref-palette-info-20', palette.info[20]),
  infoContainer: getCssVar('ref-palette-info-30', palette.info[30]),
  onInfoContainer: getCssVar('ref-palette-info-90', palette.info[90]),
  warning: getCssVar('ref-palette-warning-80', palette.warning[80]),
  onWarning: getCssVar('ref-palette-warning-20', palette.warning[20]),
  warningContainer: getCssVar('ref-palette-warning-30', palette.warning[30]),
  onWarningContainer: getCssVar('ref-palette-warning-90', palette.warning[90]),
  success: getCssVar('ref-palette-success-80', palette.success[80]),
  onSuccess: getCssVar('ref-palette-success-20', palette.success[20]),
  successContainer: getCssVar('ref-palette-success-30', palette.success[30]),
  onSuccessContainer: getCssVar('ref-palette-success-90', palette.success[90]),
});

export default createDarkColorScheme;
