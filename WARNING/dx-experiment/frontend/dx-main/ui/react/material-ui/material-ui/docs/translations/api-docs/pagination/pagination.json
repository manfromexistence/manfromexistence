{
  "componentDescription": "",
  "propDescriptions": {
    "boundaryCount": { "description": "Number of always visible pages at the beginning and end." },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "color": {
      "description": "The active color. It supports both default and custom theme colors, which can be added as shown in the <a href=\"https://mui.com/material-ui/customization/palette/#custom-colors\">palette customization guide</a>."
    },
    "count": { "description": "The total number of pages." },
    "defaultPage": {
      "description": "The page selected by default when the component is uncontrolled."
    },
    "disabled": { "description": "If <code>true</code>, the component is disabled." },
    "getItemAriaLabel": {
      "description": "Accepts a function which returns a string value that provides a user-friendly name for the current page. This is important for screen reader users.<br>For localization purposes, you can use the provided <a href=\"/material-ui/guides/localization/\">translations</a>.",
      "typeDescriptions": {
        "type": "The link or button type to format (&#39;page&#39; | &#39;first&#39; | &#39;last&#39; | &#39;next&#39; | &#39;previous&#39; | &#39;start-ellipsis&#39; | &#39;end-ellipsis&#39;). Defaults to &#39;page&#39;.",
        "page": "The page number to format.",
        "selected": "If true, the current page is selected."
      }
    },
    "hideNextButton": { "description": "If <code>true</code>, hide the next-page button." },
    "hidePrevButton": { "description": "If <code>true</code>, hide the previous-page button." },
    "onChange": {
      "description": "Callback fired when the page is changed.",
      "typeDescriptions": {
        "event": "The event source of the callback.",
        "page": "The page selected."
      }
    },
    "page": { "description": "The current page." },
    "renderItem": {
      "description": "Render the item.",
      "typeDescriptions": { "params": "The props to spread on a PaginationItem." }
    },
    "shape": { "description": "The shape of the pagination items." },
    "showFirstButton": { "description": "If <code>true</code>, show the first-page button." },
    "showLastButton": { "description": "If <code>true</code>, show the last-page button." },
    "siblingCount": {
      "description": "Number of always visible pages before and after the current page."
    },
    "size": { "description": "The size of the component." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    },
    "variant": { "description": "The variant to use." }
  },
  "classDescriptions": {
    "outlined": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"outlined\"</code>"
    },
    "root": { "description": "Styles applied to the root element." },
    "text": {
      "description": "Styles applied to {{nodeName}} if {{conditions}}.",
      "nodeName": "the root element",
      "conditions": "<code>variant=\"text\"</code>"
    },
    "ul": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the ul element" }
  }
}
