name: "Turbo Rust Setup"
description: "Sets up the Rust toolchain for CI"
inputs:
  windows:
    description: 'Set to "true" if setting up for Windows'
    required: false
    default: "false"
  targets:
    description: "Comma-separated list of target triples to install for this toolchain"
    required: false
  components:
    description: "Comma-separated list of components to be additionally installed"
    required: false
  github-token:
    description: "GitHub token. You can pass secrets.GITHUB_TOKEN"
    required: true
  shared-cache-key:
    description: "A cache key that is used instead of the automatic `job`-based key, and is stable over multiple jobs."
    required: false
  cache-key:
    description: "An additional cache key that is added alongside the automatic `job`-based cache key and can be used to further differentiate jobs."
    required: false
  save-cache:
    description: "Determiners whether the cache should be saved. If `false`, the cache is only restored."
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: "Get toolchain version from file"
      id: file
      shell: bash
      run: echo "toolchain=$(cat ./rust-toolchain)" >> $GITHUB_OUTPUT

    - name: "Set rust default environment"
      shell: bash
      run: |
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
        echo "CARGO_TERM_COLOR=always" >> $GITHUB_ENV
        echo "RUST_BACKTRACE=short" >> $GITHUB_ENV
        # Enable faster sparse index on nightly
        # https://internals.rust-lang.org/t/call-for-testing-cargo-sparse-registry/16862
        echo "CARGO_UNSTABLE_SPARSE_REGISTRY=true" >> $GITHUB_ENV

    - name: "Setup Rust toolchain"
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.file.outputs.toolchain }}
        targets: ${{ inputs.targets }}
        components: ${{ inputs.components }}

    - name: "Set Windows default host to MinGW"
      if: ${{ inputs.windows == 'true' }}
      shell: bash
      run: rustup set default-host x86_64-pc-windows-gnu && rustup show

    - name: Set Up Protoc
      id: set-up-protoc
      continue-on-error: true
      uses: arduino/setup-protoc@v1.2.0
      with:
        version: "3.x"
        repo-token: ${{ inputs.github-token }}

    - name: Set Up Protoc (second try)
      if: steps.set-up-protoc.outcome == 'failure'
      uses: arduino/setup-protoc@v1.2.0
      with:
        version: "3.x"
        repo-token: ${{ inputs.github-token }}

    - name: "Add cargo problem matchers"
      shell: bash
      run: echo "::add-matcher::${{ github.action_path }}/matchers.json"

    - uses: rui314/setup-mold@v1

    - name: "Setup Rust Cache"
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ inputs.shared-cache-key }}
        key: ${{ inputs.cache-key }}
        # the cache is huge and we only get 10gb max, so we only save on master
        save-if: ${{ github.ref == 'refs/heads/main' && inputs.save-cache || 'false' }}

    - name: "Install cargo-sweep"
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-sweep@0.6.2,cargo-groups

    - name: "Run cargo-sweep"
      uses: ./.github/actions/cargo-sweep
