[
    FreeVar {
        var: FreeVar(
            "require",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                30,
            ),
            hi: BytePos(
                37,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            "require",
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            "crypt",
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                30,
            ),
            hi: BytePos(
                46,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Call(
            3,
            FreeVar(
                "require",
            ),
            [
                Constant(
                    Str(
                        Word(
                            "charenc",
                        ),
                    ),
                ),
            ],
        ),
        prop: Constant(
            Str(
                Atom(
                    "utf8",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                59,
            ),
            hi: BytePos(
                82,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "require",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                59,
            ),
            hi: BytePos(
                66,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            "require",
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            "charenc",
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                59,
            ),
            hi: BytePos(
                77,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "require",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    2,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                99,
            ),
            hi: BytePos(
                106,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            "require",
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            "is-buffer",
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    2,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                99,
            ),
            hi: BytePos(
                119,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Call(
            3,
            FreeVar(
                "require",
            ),
            [
                Constant(
                    Str(
                        Word(
                            "charenc",
                        ),
                    ),
                ),
            ],
        ),
        prop: Constant(
            Str(
                Atom(
                    "bin",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    3,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                131,
            ),
            hi: BytePos(
                153,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "require",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    3,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                131,
            ),
            hi: BytePos(
                138,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Call {
        func: FreeVar(
            "require",
        ),
        args: [
            Value(
                Constant(
                    Str(
                        Word(
                            "charenc",
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    3,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                131,
            ),
            hi: BytePos(
                149,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "message",
                #4,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "constructor",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                252,
            ),
            hi: BytePos(
                271,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "String",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                275,
            ),
            hi: BytePos(
                281,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Conditional {
        condition: Binary(
            5,
            Member(
                3,
                Variable(
                    (
                        "message",
                        #4,
                    ),
                ),
                Constant(
                    Str(
                        Atom(
                            "constructor",
                        ),
                    ),
                ),
            ),
            Equal,
            FreeVar(
                "String",
            ),
        ),
        kind: IfElse {
            then: EffectsBlock {
                effects: [
                    Member {
                        obj: Variable(
                            (
                                "options",
                                #4,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Atom(
                                    "encoding",
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    4,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                            Expr(
                                Bin,
                            ),
                            BinExpr(
                                Right,
                            ),
                            Expr(
                                Bin,
                            ),
                            BinExpr(
                                Left,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                306,
                            ),
                            hi: BytePos(
                                322,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                    Conditional {
                        condition: Logical(
                            7,
                            And,
                            [
                                Variable(
                                    (
                                        "options",
                                        #4,
                                    ),
                                ),
                                Binary(
                                    5,
                                    Member(
                                        3,
                                        Variable(
                                            (
                                                "options",
                                                #4,
                                            ),
                                        ),
                                        Constant(
                                            Str(
                                                Atom(
                                                    "encoding",
                                                ),
                                            ),
                                        ),
                                    ),
                                    StrictEqual,
                                    Constant(
                                        Str(
                                            Word(
                                                "binary",
                                            ),
                                        ),
                                    ),
                                ),
                            ],
                        ),
                        kind: IfElse {
                            then: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: Variable(
                                            (
                                                "bin",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "stringToBytes",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                357,
                                            ),
                                            hi: BytePos(
                                                374,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: Variable(
                                            (
                                                "bin",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "stringToBytes",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "message",
                                                        #4,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                357,
                                            ),
                                            hi: BytePos(
                                                383,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Decl,
                                    ),
                                    Decl(
                                        Var,
                                    ),
                                    VarDecl(
                                        Decls(
                                            4,
                                        ),
                                    ),
                                    VarDeclarator(
                                        Init,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                ],
                            },
                            else: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: Variable(
                                            (
                                                "utf8",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "stringToBytes",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                408,
                                            ),
                                            hi: BytePos(
                                                426,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: Variable(
                                            (
                                                "utf8",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "stringToBytes",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "message",
                                                        #4,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                408,
                                            ),
                                            hi: BytePos(
                                                435,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Decl,
                                    ),
                                    Decl(
                                        Var,
                                    ),
                                    VarDecl(
                                        Decls(
                                            4,
                                        ),
                                    ),
                                    VarDeclarator(
                                        Init,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Alt,
                                    ),
                                ],
                            },
                        },
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    4,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                291,
                            ),
                            hi: BytePos(
                                436,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            0,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Call,
                    ),
                    CallExpr(
                        Callee,
                    ),
                    Callee(
                        Expr,
                    ),
                    Expr(
                        Paren,
                    ),
                    ParenExpr(
                        Expr,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            0,
                        ),
                    ),
                    Stmt(
                        Decl,
                    ),
                    Decl(
                        Var,
                    ),
                    VarDecl(
                        Decls(
                            4,
                        ),
                    ),
                    VarDeclarator(
                        Init,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            0,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Cons,
                    ),
                ],
            },
            else: EffectsBlock {
                effects: [
                    Call {
                        func: Variable(
                            (
                                "isBuffer",
                                #3,
                            ),
                        ),
                        args: [
                            Value(
                                Variable(
                                    (
                                        "message",
                                        #4,
                                    ),
                                ),
                            ),
                        ],
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    4,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Alt,
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                            Expr(
                                Call,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                452,
                            ),
                            hi: BytePos(
                                469,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                    Conditional {
                        condition: Call(
                            3,
                            Variable(
                                (
                                    "isBuffer",
                                    #3,
                                ),
                            ),
                            [
                                Variable(
                                    (
                                        "message",
                                        #4,
                                    ),
                                ),
                            ],
                        ),
                        kind: IfElse {
                            then: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: Member(
                                            5,
                                            Member(
                                                3,
                                                FreeVar(
                                                    "Array",
                                                ),
                                                Constant(
                                                    Str(
                                                        Atom(
                                                            "prototype",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Constant(
                                                Str(
                                                    Atom(
                                                        "slice",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "call",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                489,
                                            ),
                                            hi: BytePos(
                                                515,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    Member {
                                        obj: Member(
                                            3,
                                            FreeVar(
                                                "Array",
                                            ),
                                            Constant(
                                                Str(
                                                    Atom(
                                                        "prototype",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "slice",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                489,
                                            ),
                                            hi: BytePos(
                                                510,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    Member {
                                        obj: FreeVar(
                                            "Array",
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "prototype",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                489,
                                            ),
                                            hi: BytePos(
                                                504,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    FreeVar {
                                        var: FreeVar(
                                            "Array",
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Ident,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                489,
                                            ),
                                            hi: BytePos(
                                                494,
                                            ),
                                            ctxt: #1,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: Member(
                                            5,
                                            Member(
                                                3,
                                                FreeVar(
                                                    "Array",
                                                ),
                                                Constant(
                                                    Str(
                                                        Atom(
                                                            "prototype",
                                                        ),
                                                    ),
                                                ),
                                            ),
                                            Constant(
                                                Str(
                                                    Atom(
                                                        "slice",
                                                    ),
                                                ),
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "call",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "message",
                                                        #4,
                                                    ),
                                                ),
                                            ),
                                            Value(
                                                Constant(
                                                    Num(
                                                        ConstantNumber(
                                                            0.0,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Cons,
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                489,
                                            ),
                                            hi: BytePos(
                                                527,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Decl,
                                    ),
                                    Decl(
                                        Var,
                                    ),
                                    VarDecl(
                                        Decls(
                                            4,
                                        ),
                                    ),
                                    VarDeclarator(
                                        Init,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Alt,
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Cons,
                                    ),
                                ],
                            },
                            else: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: FreeVar(
                                            "Array",
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "isArray",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Test,
                                            ),
                                            Expr(
                                                Unary,
                                            ),
                                            UnaryExpr(
                                                Arg,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                545,
                                            ),
                                            hi: BytePos(
                                                558,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    FreeVar {
                                        var: FreeVar(
                                            "Array",
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Test,
                                            ),
                                            Expr(
                                                Unary,
                                            ),
                                            UnaryExpr(
                                                Arg,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                            MemberExpr(
                                                Obj,
                                            ),
                                            Expr(
                                                Ident,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                545,
                                            ),
                                            hi: BytePos(
                                                550,
                                            ),
                                            ctxt: #1,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: FreeVar(
                                            "Array",
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "isArray",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "message",
                                                        #4,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Test,
                                            ),
                                            Expr(
                                                Unary,
                                            ),
                                            UnaryExpr(
                                                Arg,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                545,
                                            ),
                                            hi: BytePos(
                                                567,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    Conditional {
                                        condition: Not(
                                            5,
                                            MemberCall(
                                                4,
                                                FreeVar(
                                                    "Array",
                                                ),
                                                Constant(
                                                    Str(
                                                        Atom(
                                                            "isArray",
                                                        ),
                                                    ),
                                                ),
                                                [
                                                    Variable(
                                                        (
                                                            "message",
                                                            #4,
                                                        ),
                                                    ),
                                                ],
                                            ),
                                        ),
                                        kind: If {
                                            then: EffectsBlock {
                                                effects: [
                                                    Member {
                                                        obj: Variable(
                                                            (
                                                                "message",
                                                                #4,
                                                            ),
                                                        ),
                                                        prop: Constant(
                                                            Str(
                                                                Atom(
                                                                    "toString",
                                                                ),
                                                            ),
                                                        ),
                                                        ast_path: [
                                                            Program(
                                                                Script,
                                                            ),
                                                            Script(
                                                                Body(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                Expr,
                                                            ),
                                                            ExprStmt(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Call,
                                                            ),
                                                            CallExpr(
                                                                Callee,
                                                            ),
                                                            Callee(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Paren,
                                                            ),
                                                            ParenExpr(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Fn,
                                                            ),
                                                            FnExpr(
                                                                Function,
                                                            ),
                                                            Function(
                                                                Body,
                                                            ),
                                                            BlockStmt(
                                                                Stmts(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                Decl,
                                                            ),
                                                            Decl(
                                                                Var,
                                                            ),
                                                            VarDecl(
                                                                Decls(
                                                                    4,
                                                                ),
                                                            ),
                                                            VarDeclarator(
                                                                Init,
                                                            ),
                                                            Expr(
                                                                Fn,
                                                            ),
                                                            FnExpr(
                                                                Function,
                                                            ),
                                                            Function(
                                                                Body,
                                                            ),
                                                            BlockStmt(
                                                                Stmts(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Alt,
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Alt,
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Cons,
                                                            ),
                                                            Stmt(
                                                                Expr,
                                                            ),
                                                            ExprStmt(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Assign,
                                                            ),
                                                            AssignExpr(
                                                                Right,
                                                            ),
                                                            Expr(
                                                                Call,
                                                            ),
                                                            CallExpr(
                                                                Callee,
                                                            ),
                                                            Callee(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Member,
                                                            ),
                                                        ],
                                                        span: Span {
                                                            lo: BytePos(
                                                                579,
                                                            ),
                                                            hi: BytePos(
                                                                595,
                                                            ),
                                                            ctxt: #0,
                                                        },
                                                        in_try: false,
                                                    },
                                                    MemberCall {
                                                        obj: Variable(
                                                            (
                                                                "message",
                                                                #4,
                                                            ),
                                                        ),
                                                        prop: Constant(
                                                            Str(
                                                                Atom(
                                                                    "toString",
                                                                ),
                                                            ),
                                                        ),
                                                        args: [],
                                                        ast_path: [
                                                            Program(
                                                                Script,
                                                            ),
                                                            Script(
                                                                Body(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                Expr,
                                                            ),
                                                            ExprStmt(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Call,
                                                            ),
                                                            CallExpr(
                                                                Callee,
                                                            ),
                                                            Callee(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Paren,
                                                            ),
                                                            ParenExpr(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Fn,
                                                            ),
                                                            FnExpr(
                                                                Function,
                                                            ),
                                                            Function(
                                                                Body,
                                                            ),
                                                            BlockStmt(
                                                                Stmts(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                Decl,
                                                            ),
                                                            Decl(
                                                                Var,
                                                            ),
                                                            VarDecl(
                                                                Decls(
                                                                    4,
                                                                ),
                                                            ),
                                                            VarDeclarator(
                                                                Init,
                                                            ),
                                                            Expr(
                                                                Fn,
                                                            ),
                                                            FnExpr(
                                                                Function,
                                                            ),
                                                            Function(
                                                                Body,
                                                            ),
                                                            BlockStmt(
                                                                Stmts(
                                                                    0,
                                                                ),
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Alt,
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Alt,
                                                            ),
                                                            Stmt(
                                                                If,
                                                            ),
                                                            IfStmt(
                                                                Cons,
                                                            ),
                                                            Stmt(
                                                                Expr,
                                                            ),
                                                            ExprStmt(
                                                                Expr,
                                                            ),
                                                            Expr(
                                                                Assign,
                                                            ),
                                                            AssignExpr(
                                                                Right,
                                                            ),
                                                            Expr(
                                                                Call,
                                                            ),
                                                        ],
                                                        span: Span {
                                                            lo: BytePos(
                                                                579,
                                                            ),
                                                            hi: BytePos(
                                                                597,
                                                            ),
                                                            ctxt: #0,
                                                        },
                                                        in_try: false,
                                                    },
                                                ],
                                                ast_path: [
                                                    Program(
                                                        Script,
                                                    ),
                                                    Script(
                                                        Body(
                                                            0,
                                                        ),
                                                    ),
                                                    Stmt(
                                                        Expr,
                                                    ),
                                                    ExprStmt(
                                                        Expr,
                                                    ),
                                                    Expr(
                                                        Call,
                                                    ),
                                                    CallExpr(
                                                        Callee,
                                                    ),
                                                    Callee(
                                                        Expr,
                                                    ),
                                                    Expr(
                                                        Paren,
                                                    ),
                                                    ParenExpr(
                                                        Expr,
                                                    ),
                                                    Expr(
                                                        Fn,
                                                    ),
                                                    FnExpr(
                                                        Function,
                                                    ),
                                                    Function(
                                                        Body,
                                                    ),
                                                    BlockStmt(
                                                        Stmts(
                                                            0,
                                                        ),
                                                    ),
                                                    Stmt(
                                                        Decl,
                                                    ),
                                                    Decl(
                                                        Var,
                                                    ),
                                                    VarDecl(
                                                        Decls(
                                                            4,
                                                        ),
                                                    ),
                                                    VarDeclarator(
                                                        Init,
                                                    ),
                                                    Expr(
                                                        Fn,
                                                    ),
                                                    FnExpr(
                                                        Function,
                                                    ),
                                                    Function(
                                                        Body,
                                                    ),
                                                    BlockStmt(
                                                        Stmts(
                                                            0,
                                                        ),
                                                    ),
                                                    Stmt(
                                                        If,
                                                    ),
                                                    IfStmt(
                                                        Alt,
                                                    ),
                                                    Stmt(
                                                        If,
                                                    ),
                                                    IfStmt(
                                                        Alt,
                                                    ),
                                                    Stmt(
                                                        If,
                                                    ),
                                                    IfStmt(
                                                        Cons,
                                                    ),
                                                ],
                                            },
                                        },
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Decl,
                                            ),
                                            Decl(
                                                Var,
                                            ),
                                            VarDecl(
                                                Decls(
                                                    4,
                                                ),
                                            ),
                                            VarDeclarator(
                                                Init,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Alt,
                                            ),
                                            Stmt(
                                                If,
                                            ),
                                            IfStmt(
                                                Test,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                540,
                                            ),
                                            hi: BytePos(
                                                598,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Decl,
                                    ),
                                    Decl(
                                        Var,
                                    ),
                                    VarDecl(
                                        Decls(
                                            4,
                                        ),
                                    ),
                                    VarDeclarator(
                                        Init,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Alt,
                                    ),
                                    Stmt(
                                        If,
                                    ),
                                    IfStmt(
                                        Alt,
                                    ),
                                ],
                            },
                        },
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                Decl,
                            ),
                            Decl(
                                Var,
                            ),
                            VarDecl(
                                Decls(
                                    4,
                                ),
                            ),
                            VarDeclarator(
                                Init,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Alt,
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Test,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                448,
                            ),
                            hi: BytePos(
                                598,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            0,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Call,
                    ),
                    CallExpr(
                        Callee,
                    ),
                    Callee(
                        Expr,
                    ),
                    Expr(
                        Paren,
                    ),
                    ParenExpr(
                        Expr,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            0,
                        ),
                    ),
                    Stmt(
                        Decl,
                    ),
                    Decl(
                        Var,
                    ),
                    VarDecl(
                        Decls(
                            4,
                        ),
                    ),
                    VarDeclarator(
                        Init,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            0,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Alt,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                248,
            ),
            hi: BytePos(
                598,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "bytesToWords",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                655,
            ),
            hi: BytePos(
                673,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    MemberCall {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "bytesToWords",
                ),
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "message",
                        #4,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                655,
            ),
            hi: BytePos(
                682,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "message",
                #4,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "length",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                696,
            ),
            hi: BytePos(
                710,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "length",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                860,
            ),
            hi: BytePos(
                868,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                885,
            ),
            hi: BytePos(
                889,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                905,
            ),
            hi: BytePos(
                909,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                919,
            ),
            hi: BytePos(
                923,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                962,
            ),
            hi: BytePos(
                966,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Variable(
            (
                "i",
                #4,
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                977,
            ),
            hi: BytePos(
                981,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Unknown {
            original_value: None,
            reason: "unsupported expression",
            has_side_effects: true,
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1037,
            ),
            hi: BytePos(
                1047,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    4,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1073,
            ),
            hi: BytePos(
                1104,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_ff",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1152,
            ),
            hi: BytePos(
                1159,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_gg",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    1,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1174,
            ),
            hi: BytePos(
                1181,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_hh",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    2,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1196,
            ),
            hi: BytePos(
                1203,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_ii",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    3,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1218,
            ),
            hi: BytePos(
                1225,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "length",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1254,
            ),
            hi: BytePos(
                1262,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            0.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1377,
            ),
            hi: BytePos(
                1385,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        0.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1362,
            ),
            hi: BytePos(
                1401,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            1.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1430,
            ),
            hi: BytePos(
                1438,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        1.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1415,
            ),
            hi: BytePos(
                1455,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            2.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1484,
            ),
            hi: BytePos(
                1492,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        2.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            17.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            606105819.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1469,
            ),
            hi: BytePos(
                1508,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            3.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    4,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1537,
            ),
            hi: BytePos(
                1545,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        3.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            22.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    4,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1522,
            ),
            hi: BytePos(
                1563,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1592,
            ),
            hi: BytePos(
                1600,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        4.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1577,
            ),
            hi: BytePos(
                1616,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1645,
            ),
            hi: BytePos(
                1653,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        5.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1200080426.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1630,
            ),
            hi: BytePos(
                1670,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1699,
            ),
            hi: BytePos(
                1707,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        6.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            17.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1684,
            ),
            hi: BytePos(
                1725,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    8,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1754,
            ),
            hi: BytePos(
                1762,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        7.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            22.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    8,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1739,
            ),
            hi: BytePos(
                1778,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            8.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    9,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1807,
            ),
            hi: BytePos(
                1815,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        8.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1770035416.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    9,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1792,
            ),
            hi: BytePos(
                1831,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    10,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1860,
            ),
            hi: BytePos(
                1868,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        9.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    10,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1845,
            ),
            hi: BytePos(
                1886,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    11,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1915,
            ),
            hi: BytePos(
                1924,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        10.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            17.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    11,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1900,
            ),
            hi: BytePos(
                1937,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    12,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                1966,
            ),
            hi: BytePos(
                1975,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        11.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            22.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    12,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                1951,
            ),
            hi: BytePos(
                1993,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    13,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2022,
            ),
            hi: BytePos(
                2031,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        12.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1804603682.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    13,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2007,
            ),
            hi: BytePos(
                2047,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            13.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    14,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2076,
            ),
            hi: BytePos(
                2085,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        13.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    14,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2061,
            ),
            hi: BytePos(
                2101,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    15,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2130,
            ),
            hi: BytePos(
                2139,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        14.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            17.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    15,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2115,
            ),
            hi: BytePos(
                2157,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    16,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2186,
            ),
            hi: BytePos(
                2195,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "FF",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        15.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            22.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1236535329.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    16,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2171,
            ),
            hi: BytePos(
                2212,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            1.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    17,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2242,
            ),
            hi: BytePos(
                2250,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        1.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    17,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2227,
            ),
            hi: BytePos(
                2266,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    18,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2295,
            ),
            hi: BytePos(
                2303,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        6.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    18,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2280,
            ),
            hi: BytePos(
                2320,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    19,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2349,
            ),
            hi: BytePos(
                2358,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        11.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            643717713.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    19,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2334,
            ),
            hi: BytePos(
                2374,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            0.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    20,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2403,
            ),
            hi: BytePos(
                2411,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        0.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            20.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    20,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2388,
            ),
            hi: BytePos(
                2428,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    21,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2457,
            ),
            hi: BytePos(
                2465,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        5.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    21,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2442,
            ),
            hi: BytePos(
                2481,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    22,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2510,
            ),
            hi: BytePos(
                2519,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        10.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            38016083.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    22,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2495,
            ),
            hi: BytePos(
                2533,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    23,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2562,
            ),
            hi: BytePos(
                2571,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        15.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    23,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2547,
            ),
            hi: BytePos(
                2588,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    24,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2617,
            ),
            hi: BytePos(
                2625,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        4.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            20.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    24,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2602,
            ),
            hi: BytePos(
                2642,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    25,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2671,
            ),
            hi: BytePos(
                2679,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        9.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            568446438.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    25,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2656,
            ),
            hi: BytePos(
                2694,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    26,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2723,
            ),
            hi: BytePos(
                2732,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        14.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    26,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2708,
            ),
            hi: BytePos(
                2749,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            3.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    27,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2778,
            ),
            hi: BytePos(
                2786,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        3.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    27,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2763,
            ),
            hi: BytePos(
                2803,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            8.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    28,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2832,
            ),
            hi: BytePos(
                2840,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        8.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            20.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1163531501.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    28,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2817,
            ),
            hi: BytePos(
                2857,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            13.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    29,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2886,
            ),
            hi: BytePos(
                2895,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        13.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    29,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2871,
            ),
            hi: BytePos(
                2912,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            2.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    30,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2941,
            ),
            hi: BytePos(
                2949,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        2.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    30,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2926,
            ),
            hi: BytePos(
                2964,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    31,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                2993,
            ),
            hi: BytePos(
                3001,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        7.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1735328473.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    31,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                2978,
            ),
            hi: BytePos(
                3018,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    32,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3047,
            ),
            hi: BytePos(
                3056,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "GG",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        12.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            20.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    32,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3032,
            ),
            hi: BytePos(
                3074,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    33,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3104,
            ),
            hi: BytePos(
                3112,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        5.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    33,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3089,
            ),
            hi: BytePos(
                3125,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            8.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    34,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3154,
            ),
            hi: BytePos(
                3162,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        8.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    34,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3139,
            ),
            hi: BytePos(
                3180,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    35,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3209,
            ),
            hi: BytePos(
                3218,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        11.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            16.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1839030562.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    35,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3194,
            ),
            hi: BytePos(
                3235,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    36,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3264,
            ),
            hi: BytePos(
                3273,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        14.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            23.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    36,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3249,
            ),
            hi: BytePos(
                3289,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            1.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    37,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3318,
            ),
            hi: BytePos(
                3326,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        1.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    37,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3303,
            ),
            hi: BytePos(
                3343,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    38,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3372,
            ),
            hi: BytePos(
                3380,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        4.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1272893353.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    38,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3357,
            ),
            hi: BytePos(
                3397,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    39,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3426,
            ),
            hi: BytePos(
                3434,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        7.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            16.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    39,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3411,
            ),
            hi: BytePos(
                3451,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    40,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3480,
            ),
            hi: BytePos(
                3489,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        10.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            23.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    40,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3465,
            ),
            hi: BytePos(
                3507,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            13.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    41,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3536,
            ),
            hi: BytePos(
                3545,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        13.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            681279174.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    41,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3521,
            ),
            hi: BytePos(
                3560,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            0.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    42,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3589,
            ),
            hi: BytePos(
                3597,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        0.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    42,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3574,
            ),
            hi: BytePos(
                3614,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            3.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    43,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3643,
            ),
            hi: BytePos(
                3651,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        3.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            16.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    43,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3628,
            ),
            hi: BytePos(
                3668,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    44,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3697,
            ),
            hi: BytePos(
                3705,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        6.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            23.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            76029189.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    44,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3682,
            ),
            hi: BytePos(
                3720,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    45,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3749,
            ),
            hi: BytePos(
                3757,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        9.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    45,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3734,
            ),
            hi: BytePos(
                3773,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    46,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3802,
            ),
            hi: BytePos(
                3811,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        12.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    46,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3787,
            ),
            hi: BytePos(
                3828,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    47,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3857,
            ),
            hi: BytePos(
                3866,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        15.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            16.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            530742520.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    47,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3842,
            ),
            hi: BytePos(
                3882,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            2.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    48,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3911,
            ),
            hi: BytePos(
                3919,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "HH",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        2.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            23.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    48,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3896,
            ),
            hi: BytePos(
                3936,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            0.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    49,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                3966,
            ),
            hi: BytePos(
                3974,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        0.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    49,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                3951,
            ),
            hi: BytePos(
                3990,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            7.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    50,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4019,
            ),
            hi: BytePos(
                4027,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        7.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1126891415.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    50,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4004,
            ),
            hi: BytePos(
                4044,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            14.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    51,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4073,
            ),
            hi: BytePos(
                4082,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        14.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    51,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4058,
            ),
            hi: BytePos(
                4100,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            5.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    52,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4129,
            ),
            hi: BytePos(
                4137,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        5.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            21.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    52,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4114,
            ),
            hi: BytePos(
                4153,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            12.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    53,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4182,
            ),
            hi: BytePos(
                4191,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        12.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1700485571.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    53,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4167,
            ),
            hi: BytePos(
                4207,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            3.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    54,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4236,
            ),
            hi: BytePos(
                4244,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        3.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    54,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4221,
            ),
            hi: BytePos(
                4262,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    55,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4291,
            ),
            hi: BytePos(
                4300,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        10.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    55,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4276,
            ),
            hi: BytePos(
                4315,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            1.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    56,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4344,
            ),
            hi: BytePos(
                4352,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        1.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            21.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    56,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4329,
            ),
            hi: BytePos(
                4370,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            8.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    57,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4399,
            ),
            hi: BytePos(
                4407,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        8.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1873313359.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    57,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4384,
            ),
            hi: BytePos(
                4423,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    58,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4452,
            ),
            hi: BytePos(
                4461,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        15.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    58,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4437,
            ),
            hi: BytePos(
                4477,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    59,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4506,
            ),
            hi: BytePos(
                4514,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        6.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    59,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4491,
            ),
            hi: BytePos(
                4532,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            13.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    60,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4561,
            ),
            hi: BytePos(
                4570,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        13.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            21.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            1309151649.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    60,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4546,
            ),
            hi: BytePos(
                4587,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            4.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    61,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4616,
            ),
            hi: BytePos(
                4624,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        4.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            6.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    61,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4601,
            ),
            hi: BytePos(
                4640,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            11.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    62,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4669,
            ),
            hi: BytePos(
                4678,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        11.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            10.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    62,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4654,
            ),
            hi: BytePos(
                4696,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            2.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    63,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4725,
            ),
            hi: BytePos(
                4733,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        2.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            15.0,
                        ),
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            718787259.0,
                        ),
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    63,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4710,
            ),
            hi: BytePos(
                4749,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "m",
                #4,
            ),
        ),
        prop: Add(
            3,
            [
                Variable(
                    (
                        "i",
                        #4,
                    ),
                ),
                Constant(
                    Num(
                        ConstantNumber(
                            9.0,
                        ),
                    ),
                ),
            ],
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    64,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    4,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4778,
            ),
            hi: BytePos(
                4786,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "II",
                #4,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "b",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "c",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "d",
                        #4,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "a",
                        #4,
                    ),
                ),
            ),
            Value(
                Member(
                    5,
                    Variable(
                        (
                            "m",
                            #4,
                        ),
                    ),
                    Add(
                        3,
                        [
                            Variable(
                                (
                                    "i",
                                    #4,
                                ),
                            ),
                            Constant(
                                Num(
                                    ConstantNumber(
                                        9.0,
                                    ),
                                ),
                            ),
                        ],
                    ),
                ),
            ),
            Value(
                Constant(
                    Num(
                        ConstantNumber(
                            21.0,
                        ),
                    ),
                ),
            ),
            Value(
                Unknown {
                    original_value: None,
                    reason: "unsupported expression",
                    has_side_effects: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                For,
            ),
            ForStmt(
                Body,
            ),
            Stmt(
                Block,
            ),
            BlockStmt(
                Stmts(
                    64,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4763,
            ),
            hi: BytePos(
                4803,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "endian",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                4940,
            ),
            hi: BytePos(
                4952,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    MemberCall {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "endian",
                ),
            ),
        ),
        args: [
            Value(
                Array {
                    total_nodes: 5,
                    items: [
                        Variable(
                            (
                                "a",
                                #4,
                            ),
                        ),
                        Variable(
                            (
                                "b",
                                #4,
                            ),
                        ),
                        Variable(
                            (
                                "c",
                                #4,
                            ),
                        ),
                        Variable(
                            (
                                "d",
                                #4,
                            ),
                        ),
                    ],
                    mutable: true,
                },
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    4,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                4940,
            ),
            hi: BytePos(
                4966,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_ff",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5003,
            ),
            hi: BytePos(
                5010,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_gg",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5153,
            ),
            hi: BytePos(
                5160,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_hh",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    3,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5303,
            ),
            hi: BytePos(
                5310,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_ii",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    4,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5444,
            ),
            hi: BytePos(
                5451,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_blocksize",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    5,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5620,
            ),
            hi: BytePos(
                5634,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "md5",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "_digestsize",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    6,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5643,
            ),
            hi: BytePos(
                5658,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: FreeVar(
            "module",
        ),
        prop: Constant(
            Str(
                Atom(
                    "exports",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5668,
            ),
            hi: BytePos(
                5682,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "module",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Left,
            ),
            AssignTarget(
                Simple,
            ),
            SimpleAssignTarget(
                Member,
            ),
            MemberExpr(
                Obj,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                5668,
            ),
            hi: BytePos(
                5674,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    FreeVar {
        var: FreeVar(
            "undefined",
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Left,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Ident,
            ),
        ],
        span: Span {
            lo: BytePos(
                5735,
            ),
            hi: BytePos(
                5744,
            ),
            ctxt: #1,
        },
        in_try: false,
    },
    Conditional {
        condition: Logical(
            7,
            Or,
            [
                Binary(
                    3,
                    Variable(
                        (
                            "message",
                            #11,
                        ),
                    ),
                    StrictEqual,
                    FreeVar(
                        "undefined",
                    ),
                ),
                Binary(
                    3,
                    Variable(
                        (
                            "message",
                            #11,
                        ),
                    ),
                    StrictEqual,
                    Constant(
                        Null,
                    ),
                ),
            ],
        ),
        kind: If {
            then: EffectsBlock {
                effects: [
                    FreeVar {
                        var: FreeVar(
                            "Error",
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    7,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Assign,
                            ),
                            AssignExpr(
                                Right,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    0,
                                ),
                            ),
                            Stmt(
                                If,
                            ),
                            IfStmt(
                                Cons,
                            ),
                            Stmt(
                                Throw,
                            ),
                            ThrowStmt(
                                Arg,
                            ),
                            Expr(
                                New,
                            ),
                            NewExpr(
                                Callee,
                            ),
                            Expr(
                                Ident,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                5782,
                            ),
                            hi: BytePos(
                                5787,
                            ),
                            ctxt: #1,
                        },
                        in_try: false,
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            0,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Call,
                    ),
                    CallExpr(
                        Callee,
                    ),
                    Callee(
                        Expr,
                    ),
                    Expr(
                        Paren,
                    ),
                    ParenExpr(
                        Expr,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            7,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Assign,
                    ),
                    AssignExpr(
                        Right,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            0,
                        ),
                    ),
                    Stmt(
                        If,
                    ),
                    IfStmt(
                        Cons,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    0,
                ),
            ),
            Stmt(
                If,
            ),
            IfStmt(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                5719,
            ),
            hi: BytePos(
                5819,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "wordsToBytes",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5843,
            ),
            hi: BytePos(
                5861,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Call {
        func: Variable(
            (
                "md5",
                #3,
            ),
        ),
        args: [
            Value(
                Variable(
                    (
                        "message",
                        #11,
                    ),
                ),
            ),
            Value(
                Variable(
                    (
                        "options",
                        #11,
                    ),
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Args(
                    0,
                ),
            ),
            ExprOrSpread(
                Expr,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                5862,
            ),
            hi: BytePos(
                5883,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    MemberCall {
        obj: Variable(
            (
                "crypt",
                #3,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "wordsToBytes",
                ),
            ),
        ),
        args: [
            Value(
                Call(
                    4,
                    Variable(
                        (
                            "md5",
                            #3,
                        ),
                    ),
                    [
                        Variable(
                            (
                                "message",
                                #11,
                            ),
                        ),
                        Variable(
                            (
                                "options",
                                #11,
                            ),
                        ),
                    ],
                ),
            ),
        ],
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    1,
                ),
            ),
            Stmt(
                Decl,
            ),
            Decl(
                Var,
            ),
            VarDecl(
                Decls(
                    0,
                ),
            ),
            VarDeclarator(
                Init,
            ),
            Expr(
                Call,
            ),
        ],
        span: Span {
            lo: BytePos(
                5843,
            ),
            hi: BytePos(
                5884,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Member {
        obj: Variable(
            (
                "options",
                #11,
            ),
        ),
        prop: Constant(
            Str(
                Atom(
                    "asBytes",
                ),
            ),
        ),
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Cond,
            ),
            CondExpr(
                Test,
            ),
            Expr(
                Bin,
            ),
            BinExpr(
                Right,
            ),
            Expr(
                Member,
            ),
        ],
        span: Span {
            lo: BytePos(
                5908,
            ),
            hi: BytePos(
                5923,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
    Conditional {
        condition: Logical(
            5,
            And,
            [
                Variable(
                    (
                        "options",
                        #11,
                    ),
                ),
                Member(
                    3,
                    Variable(
                        (
                            "options",
                            #11,
                        ),
                    ),
                    Constant(
                        Str(
                            Atom(
                                "asBytes",
                            ),
                        ),
                    ),
                ),
            ],
        ),
        kind: Ternary {
            then: EffectsBlock {
                effects: [],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            0,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Call,
                    ),
                    CallExpr(
                        Callee,
                    ),
                    Callee(
                        Expr,
                    ),
                    Expr(
                        Paren,
                    ),
                    ParenExpr(
                        Expr,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            7,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Assign,
                    ),
                    AssignExpr(
                        Right,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            2,
                        ),
                    ),
                    Stmt(
                        Return,
                    ),
                    ReturnStmt(
                        Arg,
                    ),
                    Expr(
                        Cond,
                    ),
                    CondExpr(
                        Cons,
                    ),
                ],
            },
            else: EffectsBlock {
                effects: [
                    Member {
                        obj: Variable(
                            (
                                "options",
                                #11,
                            ),
                        ),
                        prop: Constant(
                            Str(
                                Atom(
                                    "asString",
                                ),
                            ),
                        ),
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    7,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Assign,
                            ),
                            AssignExpr(
                                Right,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    2,
                                ),
                            ),
                            Stmt(
                                Return,
                            ),
                            ReturnStmt(
                                Arg,
                            ),
                            Expr(
                                Cond,
                            ),
                            CondExpr(
                                Alt,
                            ),
                            Expr(
                                Cond,
                            ),
                            CondExpr(
                                Test,
                            ),
                            Expr(
                                Bin,
                            ),
                            BinExpr(
                                Right,
                            ),
                            Expr(
                                Member,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                5963,
                            ),
                            hi: BytePos(
                                5979,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                    Conditional {
                        condition: Logical(
                            5,
                            And,
                            [
                                Variable(
                                    (
                                        "options",
                                        #11,
                                    ),
                                ),
                                Member(
                                    3,
                                    Variable(
                                        (
                                            "options",
                                            #11,
                                        ),
                                    ),
                                    Constant(
                                        Str(
                                            Atom(
                                                "asString",
                                            ),
                                        ),
                                    ),
                                ),
                            ],
                        ),
                        kind: Ternary {
                            then: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: Variable(
                                            (
                                                "bin",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "bytesToString",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    7,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                Return,
                                            ),
                                            ReturnStmt(
                                                Arg,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Cons,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                5988,
                                            ),
                                            hi: BytePos(
                                                6005,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: Variable(
                                            (
                                                "bin",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "bytesToString",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "digestbytes",
                                                        #11,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    7,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                Return,
                                            ),
                                            ReturnStmt(
                                                Arg,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Cons,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                5988,
                                            ),
                                            hi: BytePos(
                                                6018,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            7,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Assign,
                                    ),
                                    AssignExpr(
                                        Right,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            2,
                                        ),
                                    ),
                                    Stmt(
                                        Return,
                                    ),
                                    ReturnStmt(
                                        Arg,
                                    ),
                                    Expr(
                                        Cond,
                                    ),
                                    CondExpr(
                                        Alt,
                                    ),
                                    Expr(
                                        Cond,
                                    ),
                                    CondExpr(
                                        Cons,
                                    ),
                                ],
                            },
                            else: EffectsBlock {
                                effects: [
                                    Member {
                                        obj: Variable(
                                            (
                                                "crypt",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "bytesToHex",
                                                ),
                                            ),
                                        ),
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    7,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                Return,
                                            ),
                                            ReturnStmt(
                                                Arg,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Member,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                6027,
                                            ),
                                            hi: BytePos(
                                                6043,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                    MemberCall {
                                        obj: Variable(
                                            (
                                                "crypt",
                                                #3,
                                            ),
                                        ),
                                        prop: Constant(
                                            Str(
                                                Atom(
                                                    "bytesToHex",
                                                ),
                                            ),
                                        ),
                                        args: [
                                            Value(
                                                Variable(
                                                    (
                                                        "digestbytes",
                                                        #11,
                                                    ),
                                                ),
                                            ),
                                        ],
                                        ast_path: [
                                            Program(
                                                Script,
                                            ),
                                            Script(
                                                Body(
                                                    0,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                            CallExpr(
                                                Callee,
                                            ),
                                            Callee(
                                                Expr,
                                            ),
                                            Expr(
                                                Paren,
                                            ),
                                            ParenExpr(
                                                Expr,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    7,
                                                ),
                                            ),
                                            Stmt(
                                                Expr,
                                            ),
                                            ExprStmt(
                                                Expr,
                                            ),
                                            Expr(
                                                Assign,
                                            ),
                                            AssignExpr(
                                                Right,
                                            ),
                                            Expr(
                                                Fn,
                                            ),
                                            FnExpr(
                                                Function,
                                            ),
                                            Function(
                                                Body,
                                            ),
                                            BlockStmt(
                                                Stmts(
                                                    2,
                                                ),
                                            ),
                                            Stmt(
                                                Return,
                                            ),
                                            ReturnStmt(
                                                Arg,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Cond,
                                            ),
                                            CondExpr(
                                                Alt,
                                            ),
                                            Expr(
                                                Call,
                                            ),
                                        ],
                                        span: Span {
                                            lo: BytePos(
                                                6027,
                                            ),
                                            hi: BytePos(
                                                6056,
                                            ),
                                            ctxt: #0,
                                        },
                                        in_try: false,
                                    },
                                ],
                                ast_path: [
                                    Program(
                                        Script,
                                    ),
                                    Script(
                                        Body(
                                            0,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Call,
                                    ),
                                    CallExpr(
                                        Callee,
                                    ),
                                    Callee(
                                        Expr,
                                    ),
                                    Expr(
                                        Paren,
                                    ),
                                    ParenExpr(
                                        Expr,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            7,
                                        ),
                                    ),
                                    Stmt(
                                        Expr,
                                    ),
                                    ExprStmt(
                                        Expr,
                                    ),
                                    Expr(
                                        Assign,
                                    ),
                                    AssignExpr(
                                        Right,
                                    ),
                                    Expr(
                                        Fn,
                                    ),
                                    FnExpr(
                                        Function,
                                    ),
                                    Function(
                                        Body,
                                    ),
                                    BlockStmt(
                                        Stmts(
                                            2,
                                        ),
                                    ),
                                    Stmt(
                                        Return,
                                    ),
                                    ReturnStmt(
                                        Arg,
                                    ),
                                    Expr(
                                        Cond,
                                    ),
                                    CondExpr(
                                        Alt,
                                    ),
                                    Expr(
                                        Cond,
                                    ),
                                    CondExpr(
                                        Alt,
                                    ),
                                ],
                            },
                        },
                        ast_path: [
                            Program(
                                Script,
                            ),
                            Script(
                                Body(
                                    0,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Call,
                            ),
                            CallExpr(
                                Callee,
                            ),
                            Callee(
                                Expr,
                            ),
                            Expr(
                                Paren,
                            ),
                            ParenExpr(
                                Expr,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    7,
                                ),
                            ),
                            Stmt(
                                Expr,
                            ),
                            ExprStmt(
                                Expr,
                            ),
                            Expr(
                                Assign,
                            ),
                            AssignExpr(
                                Right,
                            ),
                            Expr(
                                Fn,
                            ),
                            FnExpr(
                                Function,
                            ),
                            Function(
                                Body,
                            ),
                            BlockStmt(
                                Stmts(
                                    2,
                                ),
                            ),
                            Stmt(
                                Return,
                            ),
                            ReturnStmt(
                                Arg,
                            ),
                            Expr(
                                Cond,
                            ),
                            CondExpr(
                                Alt,
                            ),
                            Expr(
                                Cond,
                            ),
                            CondExpr(
                                Test,
                            ),
                        ],
                        span: Span {
                            lo: BytePos(
                                5952,
                            ),
                            hi: BytePos(
                                6056,
                            ),
                            ctxt: #0,
                        },
                        in_try: false,
                    },
                ],
                ast_path: [
                    Program(
                        Script,
                    ),
                    Script(
                        Body(
                            0,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Call,
                    ),
                    CallExpr(
                        Callee,
                    ),
                    Callee(
                        Expr,
                    ),
                    Expr(
                        Paren,
                    ),
                    ParenExpr(
                        Expr,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            7,
                        ),
                    ),
                    Stmt(
                        Expr,
                    ),
                    ExprStmt(
                        Expr,
                    ),
                    Expr(
                        Assign,
                    ),
                    AssignExpr(
                        Right,
                    ),
                    Expr(
                        Fn,
                    ),
                    FnExpr(
                        Function,
                    ),
                    Function(
                        Body,
                    ),
                    BlockStmt(
                        Stmts(
                            2,
                        ),
                    ),
                    Stmt(
                        Return,
                    ),
                    ReturnStmt(
                        Arg,
                    ),
                    Expr(
                        Cond,
                    ),
                    CondExpr(
                        Alt,
                    ),
                ],
            },
        },
        ast_path: [
            Program(
                Script,
            ),
            Script(
                Body(
                    0,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Call,
            ),
            CallExpr(
                Callee,
            ),
            Callee(
                Expr,
            ),
            Expr(
                Paren,
            ),
            ParenExpr(
                Expr,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    7,
                ),
            ),
            Stmt(
                Expr,
            ),
            ExprStmt(
                Expr,
            ),
            Expr(
                Assign,
            ),
            AssignExpr(
                Right,
            ),
            Expr(
                Fn,
            ),
            FnExpr(
                Function,
            ),
            Function(
                Body,
            ),
            BlockStmt(
                Stmts(
                    2,
                ),
            ),
            Stmt(
                Return,
            ),
            ReturnStmt(
                Arg,
            ),
            Expr(
                Cond,
            ),
            CondExpr(
                Test,
            ),
        ],
        span: Span {
            lo: BytePos(
                5897,
            ),
            hi: BytePos(
                6056,
            ),
            ctxt: #0,
        },
        in_try: false,
    },
]
